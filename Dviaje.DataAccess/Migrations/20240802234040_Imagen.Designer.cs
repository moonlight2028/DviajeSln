// <auto-generated />
using System;
using Dviaje.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dviaje.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802234040_Imagen")]
    partial class Imagen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dviaje.Models.Adjunto", b =>
                {
                    b.Property<int>("IdAdjunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAdjunto"));

                    b.Property<int>("IdAtencion")
                        .HasColumnType("integer");

                    b.Property<string>("RutaAdjunto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdAdjunto");

                    b.HasIndex("IdAtencion");

                    b.HasIndex("RutaAdjunto")
                        .IsUnique();

                    b.ToTable("Adjuntos");

                    b.HasData(
                        new
                        {
                            IdAdjunto = 1,
                            IdAtencion = 1,
                            RutaAdjunto = "https://DViaje.com/adjuntos/queja_tourrtt.jpg"
                        },
                        new
                        {
                            IdAdjunto = 2,
                            IdAtencion = 2,
                            RutaAdjunto = "https://DViaje.com/adjuntos/queja_tour.jpg"
                        },
                        new
                        {
                            IdAdjunto = 3,
                            IdAtencion = 3,
                            RutaAdjunto = "https://DViaje.com/adjuntos/confirmacion_pago.pdf"
                        },
                        new
                        {
                            IdAdjunto = 4,
                            IdAtencion = 3,
                            RutaAdjunto = "https://DViaje.com/adjuntos/itinerario_tour.pdf"
                        },
                        new
                        {
                            IdAdjunto = 5,
                            IdAtencion = 4,
                            RutaAdjunto = "https://DViaje.com/adjuntos/felicitacion_tour.jpg"
                        },
                        new
                        {
                            IdAdjunto = 6,
                            IdAtencion = 4,
                            RutaAdjunto = "https://DViaje.com/adjuntos/reembolso_traslado.pdf"
                        },
                        new
                        {
                            IdAdjunto = 7,
                            IdAtencion = 9,
                            RutaAdjunto = "https://DViaje.com/adjuntos/informacion_tour.pdf"
                        },
                        new
                        {
                            IdAdjunto = 8,
                            IdAtencion = 6,
                            RutaAdjunto = "https://DViaje.com/adjuntos/sugerencia_app.jpg"
                        },
                        new
                        {
                            IdAdjunto = 9,
                            IdAtencion = 7,
                            RutaAdjunto = "https://DViaje.com/adjuntos/comprobante_reserva.jpg"
                        },
                        new
                        {
                            IdAdjunto = 10,
                            IdAtencion = 1,
                            RutaAdjunto = "https://DViaje.com/adjuntos/agradecimiento_tour.jpg"
                        },
                        new
                        {
                            IdAdjunto = 11,
                            IdAtencion = 8,
                            RutaAdjunto = "https://DViaje.com/adjuntos/problema_pago.jpg"
                        },
                        new
                        {
                            IdAdjunto = 12,
                            IdAtencion = 3,
                            RutaAdjunto = "https://DViaje.com/adjuntos/comprobantesde_reserva.jpg"
                        },
                        new
                        {
                            IdAdjunto = 13,
                            IdAtencion = 3,
                            RutaAdjunto = "https://DViaje.com/adjuntos/agradecimientosss_tour.jpg"
                        },
                        new
                        {
                            IdAdjunto = 14,
                            IdAtencion = 9,
                            RutaAdjunto = "https://DViaje.com/adjuntos/problemaconid_pago.jpg"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.AtencionViajero", b =>
                {
                    b.Property<int>("IdAtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAtencion"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("AtencionViajeroPrioridad")
                        .HasColumnType("integer");

                    b.Property<int>("AtencionViajeroTipoPqrs")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaAtencion")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaRespuesta")
                        .HasColumnType("timestamp");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Respuesta")
                        .HasMaxLength(250)
                        .HasColumnType("text");

                    b.HasKey("IdAtencion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AtencionViajeros");

                    b.HasData(
                        new
                        {
                            IdAtencion = 1,
                            Asunto = "Queja por Servicio de Visita Guiada Retrasada el 25 de Julio",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 1,
                            Descripcion = "Me gustaría presentar una queja sobre el servicio recibido el pasado 25 de julio de 2024 a través de su plataforma de turismo. Ese día, tenía programada una visita guiada para las 10:00 a.m. en el centro histórico, pero la guía no llegó hasta las 11:30 a.m., sin ninguna explicación por parte del equipo de soporte. Además, la atención recibida fue poco profesional, ya que la guía no pudo responder adecuadamente a mis preguntas sobre los lugares visitados. Agradecería una revisión de este caso y una explicación sobre lo ocurrido, así como las medidas que se tomarán para evitar que situaciones similares se repitan en el futuro. /n Adjunto capturas de pantalla de los correos de confirmación de mi reserva y del pago realizado como referencia.",
                            FechaAtencion = new DateTime(2024, 7, 25, 10, 30, 50, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(2024, 7, 30, 7, 39, 20, 0, DateTimeKind.Unspecified),
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            Respuesta = "Gracias por comunicarse con nosotros y por informarnos sobre su experiencia con nuestro servicio el 25 de julio de 2024. Lamentamos sinceramente los inconvenientes que experimentó durante su visita guiada y cualquier insatisfacción que esto le haya causado. /n Hemos revisado su caso y constatamos que hubo un problema de programación inesperado que retrasó la llegada de la guía. Apreciamos su paciencia y comprensión en esta situación. Hemos tomado medidas para mejorar nuestros procesos de planificación y comunicación con el equipo de guías para asegurarnos de que este tipo de incidentes no se repitan. /n Además, como gesto de disculpa, nos gustaría ofrecerle un reembolso completo del costo de su reserva y un descuento del 20% en su próxima visita con nosotros. Un representante de nuestro equipo se pondrá en contacto con usted en breve para gestionar el reembolso. /n Gracias por su comprensión y por darnos la oportunidad de corregir este error. Valoramos mucho su opinión y esperamos poder servirle mejor en el futuro."
                        },
                        new
                        {
                            IdAtencion = 2,
                            Asunto = "Problemas Técnicos con la Aplicación de Audio-Guía",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 1,
                            Descripcion = "Durante mi visita al museo el 20 de julio de 2024, experimenté varios problemas técnicos con la aplicación de audio-guía. La aplicación se cerraba inesperadamente, y no pude escuchar la mayoría de las explicaciones. Adjunto capturas de pantalla de los errores.",
                            FechaAtencion = new DateTime(2024, 7, 20, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(2024, 7, 21, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            Respuesta = "Gracias por informarnos sobre los problemas técnicos que experimentó el 20 de julio de 2024. Hemos identificado el problema y estamos trabajando para solucionarlo. Como compensación, le ofrecemos un pase gratuito para su próxima visita."
                        },
                        new
                        {
                            IdAtencion = 3,
                            Asunto = "Información sobre Tour Ecológico",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "Solicito información adicional sobre el tour ecológico programado para el 15 de agosto de 2024. Me gustaría conocer más sobre las actividades incluidas y el equipo necesario.",
                            FechaAtencion = new DateTime(2024, 7, 15, 12, 10, 30, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(2024, 7, 16, 8, 45, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            Respuesta = "Gracias por su interés en nuestro tour ecológico. El tour incluye caminatas guiadas, observación de fauna y flora, y un taller de reciclaje. Se recomienda llevar ropa cómoda, repelente y cámara."
                        },
                        new
                        {
                            IdAtencion = 4,
                            Asunto = "Cancelación de Reserva de Tour Gastronómico",
                            AtencionViajeroPrioridad = 1,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "Deseo cancelar mi reserva para el tour gastronómico del 22 de julio de 2024 debido a un cambio de planes. Adjunto el número de reserva.",
                            FechaAtencion = new DateTime(2024, 7, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(2024, 7, 19, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            Respuesta = "Hemos procesado la cancelación de su reserva para el tour gastronómico del 22 de julio de 2024. Se ha iniciado el reembolso correspondiente, que debería reflejarse en su cuenta en 5-7 días hábiles."
                        },
                        new
                        {
                            IdAtencion = 5,
                            Asunto = "Agradecimiento por Excelente Servicio en Tour de Aventura",
                            AtencionViajeroPrioridad = 1,
                            AtencionViajeroTipoPqrs = 3,
                            Descripcion = "Me gustaría felicitar al equipo por el excelente servicio recibido durante el tour de aventura el 8 de julio de 2024. La guía fue muy profesional y las actividades bien organizadas.",
                            FechaAtencion = new DateTime(2024, 7, 10, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(2024, 7, 11, 8, 15, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "3a895383-b546-4693-8246-924a9fc5289f",
                            Respuesta = "Gracias por sus amables palabras y por reconocer el esfuerzo de nuestro equipo. Compartiremos sus comentarios con la guía y el resto del equipo. Nos alegra que haya disfrutado de su experiencia."
                        },
                        new
                        {
                            IdAtencion = 6,
                            Asunto = "Retraso en el Servicio de Traslado al Aeropuerto",
                            AtencionViajeroPrioridad = 1,
                            AtencionViajeroTipoPqrs = 1,
                            Descripcion = "El vehículo asignado para el traslado al aeropuerto el 22 de julio de 2024 no llegó a tiempo, y casi perdí mi vuelo. Agradecería una explicación y compensación por este inconveniente.",
                            FechaAtencion = new DateTime(2024, 7, 22, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(2024, 7, 23, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            Respuesta = "Lamentamos sinceramente el retraso en su traslado al aeropuerto el 22 de julio de 2024. Investigamos el incidente y estamos mejorando nuestros procesos de logística. Le ofrecemos un descuento del 30% en su próximo servicio de traslado."
                        },
                        new
                        {
                            IdAtencion = 7,
                            Asunto = "Consulta sobre Disponibilidad de Tours Privados para Familias",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "Me gustaría saber si hay disponibilidad de tours privados para familias en agosto de 2024 y cuáles serían las opciones y precios.",
                            FechaAtencion = new DateTime(2024, 7, 17, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "9cd842af-b711-44cc-aa5e-3863e3c30b76"
                        },
                        new
                        {
                            IdAtencion = 8,
                            Asunto = "Sugerencia para Mejorar la Aplicación Móvil",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 3,
                            Descripcion = "Me gustaría proponer una mejora en su aplicación móvil. Sería útil poder descargar itinerarios y mapas para usarlos sin conexión.",
                            FechaAtencion = new DateTime(2024, 7, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "c654adef-5f0c-48e6-946a-52706f8ac520"
                        },
                        new
                        {
                            IdAtencion = 9,
                            Asunto = "Falta de Confirmación de Reserva para Tour de Playa",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 2,
                            Descripcion = "No recibí el correo de confirmación para mi reserva del tour de playa el 15 de julio de 2024. Adjunto el recibo de pago como comprobante.",
                            FechaAtencion = new DateTime(2024, 7, 8, 8, 20, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "8142c33b-ee02-4a13-b0c1-1e941387433d"
                        },
                        new
                        {
                            IdAtencion = 10,
                            Asunto = "Agradecimiento por Tour Cultural",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 3,
                            Descripcion = "Quisiera expresar mi satisfacción por el excelente servicio recibido durante el tour cultural el 3 de julio de 2024. La organización fue impecable y la guía muy conocedora.",
                            FechaAtencion = new DateTime(2024, 7, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaRespuesta = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuario = "39e10980-4df3-494a-bbe7-410e105f6551"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdCategoria");

                    b.HasIndex("NombreCategoria")
                        .IsUnique();

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Dviaje.Models.Favorito", b =>
                {
                    b.Property<int>("IdFavorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFavorito"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdFavorito");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("Dviaje.Models.FechaNoDisponible", b =>
                {
                    b.Property<int>("IdFechaNoDisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFechaNoDisponible"));

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.HasKey("IdFechaNoDisponible");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("FechasNoDisponibles");
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.Property<int>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<string>("IdAliado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroResenas")
                        .HasColumnType("integer");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("Puntuacion")
                        .HasColumnType("numeric(2,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdPublicacion");

                    b.HasIndex("IdAliado");

                    b.ToTable("Publicaciones");

                    b.HasData(
                        new
                        {
                            IdPublicacion = 1,
                            Descripcion = "Descubre la magia de la naturaleza sin renunciar a las comodidades del hogar en Casa Quincha Glamping. Ubicada en un entorno sereno y pintoresco, nuestra experiencia de glamping combina el lujo y la aventura, ofreciendo una estancia inolvidable para quienes buscan relajarse y reconectar con el entorno natural.",
                            Direccion = "Km 5 Via San Francisco - Supatá, San Francisco 253601 Colombia",
                            Fecha = new DateTime(2024, 8, 1, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            NumeroResenas = 150,
                            Precio = 813000m,
                            Puntuacion = 4.3m,
                            Titulo = "Casa Quincha Glamping"
                        },
                        new
                        {
                            IdPublicacion = 2,
                            Descripcion = "Sumérgete en la tranquilidad de la naturaleza en Eco Lodge del Valle. Ofrecemos cabañas ecológicas con vistas impresionantes, actividades al aire libre y un enfoque en la sostenibilidad. Perfecto para quienes buscan un escape relajante y responsable.",
                            Direccion = "Vereda El Dorado, Valle de Cauca, Colombia",
                            Fecha = new DateTime(2024, 8, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            NumeroResenas = 98,
                            Precio = 925000m,
                            Puntuacion = 4.7m,
                            Titulo = "Eco Lodge del Valle"
                        },
                        new
                        {
                            IdPublicacion = 3,
                            Descripcion = "Refugio del Bosque ofrece una experiencia única en medio de un bosque encantado. Disfruta de nuestras cabañas acogedoras, senderos para caminatas y actividades al aire libre. Ideal para familias y aventureros.",
                            Direccion = "Km 10 Via Manizales - Chinchina, Manizales, Colombia",
                            Fecha = new DateTime(2024, 8, 3, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            NumeroResenas = 76,
                            Precio = 675000m,
                            Puntuacion = 4.2m,
                            Titulo = "Refugio del Bosque"
                        },
                        new
                        {
                            IdPublicacion = 4,
                            Descripcion = "Descubre el lujo y la serenidad en Oasis de la Sierra. Nuestra propiedad ofrece vistas espectaculares, instalaciones de primera clase y actividades exclusivas en un entorno montañoso inigualable.",
                            Direccion = "Avenida de los Andes, Cúcuta, Colombia",
                            Fecha = new DateTime(2024, 8, 4, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            NumeroResenas = 120,
                            Precio = 1150000m,
                            Puntuacion = 4.6m,
                            Titulo = "Oasis de la Sierra"
                        },
                        new
                        {
                            IdPublicacion = 5,
                            Descripcion = "Villas del Mar ofrece una experiencia de lujo frente al mar con villas privadas, piscina infinita y servicios personalizados. Ideal para escapadas románticas o celebraciones especiales.",
                            Direccion = "Playa de San Andrés, San Andrés, Colombia",
                            Fecha = new DateTime(2024, 8, 5, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            NumeroResenas = 134,
                            Precio = 1500000m,
                            Puntuacion = 4.8m,
                            Titulo = "Villas del Mar"
                        },
                        new
                        {
                            IdPublicacion = 6,
                            Descripcion = "Disfruta de una estancia relajante en Cabañas del Río, rodeado de la belleza natural de la región. Ofrecemos cabañas rústicas con acceso directo al río y actividades de pesca y senderismo.",
                            Direccion = "Vereda El Río, Medellín, Colombia",
                            Fecha = new DateTime(2024, 8, 6, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            NumeroResenas = 85,
                            Precio = 720000m,
                            Puntuacion = 4.4m,
                            Titulo = "Cabañas del Río"
                        },
                        new
                        {
                            IdPublicacion = 7,
                            Descripcion = "Rincón del Viento ofrece una experiencia de glamping en medio de la naturaleza con tiendas de lujo, fogatas y una vista impresionante de las montañas. Perfecto para una escapada romántica o una aventura familiar.",
                            Direccion = "Km 20 Via Villa de Leyva, Boyacá, Colombia",
                            Fecha = new DateTime(2024, 8, 7, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "39e10980-4df3-494a-bbe7-410e105f6551",
                            NumeroResenas = 63,
                            Precio = 860000m,
                            Puntuacion = 4.1m,
                            Titulo = "Rincón del Viento"
                        },
                        new
                        {
                            IdPublicacion = 8,
                            Descripcion = "Hotel del Lago ofrece una estancia lujosa con vistas al lago, spa, y restaurante gourmet. Ideal para una experiencia de relax y confort con servicios de alta calidad.",
                            Direccion = "Río Guatapé, Antioquia, Colombia",
                            Fecha = new DateTime(2024, 8, 8, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "39e10980-4df3-494a-bbe7-410e105f6551",
                            NumeroResenas = 142,
                            Precio = 1050000m,
                            Puntuacion = 4.5m,
                            Titulo = "Hotel del Lago"
                        },
                        new
                        {
                            IdPublicacion = 9,
                            Descripcion = "Vive una experiencia de bienestar total en nuestro centro de bienestar natural. Ofrecemos retiros de meditación, yoga, y spa en un entorno tranquilo y rejuvenecedor.",
                            Direccion = "Vereda La Primavera, Bogotá, Colombia",
                            Fecha = new DateTime(2024, 8, 9, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c3733288-b354-445d-95da-4c655c3220b3",
                            NumeroResenas = 167,
                            Precio = 1300000m,
                            Puntuacion = 1.0m,
                            Titulo = "Centro de Bienestar Natural"
                        },
                        new
                        {
                            IdPublicacion = 10,
                            Descripcion = "Aventura en la Selva ofrece una experiencia única de ecoturismo con cabañas en la selva, guías especializados y actividades de exploración en la biodiversidad local.",
                            Direccion = "Reserva Natural del Amazonas, Leticia, Colombia",
                            Fecha = new DateTime(2024, 8, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            NumeroResenas = 110,
                            Precio = 930000m,
                            Puntuacion = 1.3m,
                            Titulo = "Aventura en la Selva"
                        },
                        new
                        {
                            IdPublicacion = 11,
                            Descripcion = "Casas del Valle ofrece una estancia encantadora en casas de campo tradicionales con acceso a actividades al aire libre, incluyendo paseos a caballo y rutas de senderismo.",
                            Direccion = "Vereda El Valle, Tunja, Colombia",
                            Fecha = new DateTime(2024, 8, 11, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            NumeroResenas = 95,
                            Precio = 785000m,
                            Puntuacion = 2.4m,
                            Titulo = "Casas del Valle"
                        },
                        new
                        {
                            IdPublicacion = 12,
                            Descripcion = "Camping de Montaña ofrece una experiencia auténtica de campamento con acceso a rutas de senderismo y vistas panorámicas de las montañas. Perfecto para los amantes de la naturaleza y la aventura.",
                            Direccion = "Parque Nacional de los Nevados, Manizales, Colombia",
                            Fecha = new DateTime(2024, 8, 12, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            NumeroResenas = 80,
                            Precio = 590000m,
                            Puntuacion = 3.0m,
                            Titulo = "Camping de Montaña"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionCategoria", b =>
                {
                    b.Property<int>("IdPublicacionCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionCategoria"));

                    b.Property<int>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionCategoria");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesCategorias");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionFavorita", b =>
                {
                    b.Property<int>("IdPublicacionFavorita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionFavorita"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionFavorita");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesFavoritas");

                    b.HasData(
                        new
                        {
                            IdPublicacionFavorita = 1,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionFavorita = 2,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionFavorita = 3,
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdPublicacionFavorita = 4,
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdPublicacionFavorita = 5,
                            IdPublicacion = 5
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionImagen", b =>
                {
                    b.Property<int>("IdPublicacionImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionImagen"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdPublicacionImagen");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("Ruta")
                        .IsUnique();

                    b.ToTable("PublicacionesImagenes");

                    b.HasData(
                        new
                        {
                            IdPublicacionImagen = 1,
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1707343848552-893e05dba6ac?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 2,
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1500835556837-99ac94a94552?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 3,
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1469854523086-cc02fe5d8800?q=80&w=1421&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 4,
                            IdPublicacion = 1,
                            Ruta = "https://unsplash.com/es/fotos/avion-en-el-cielo-durante-la-hora-dorada-M0AWNxnLaMw"
                        },
                        new
                        {
                            IdPublicacionImagen = 5,
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1504598318550-17eba1008a68?q=80&w=1372&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 6,
                            IdPublicacion = 2,
                            Ruta = "https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 7,
                            IdPublicacion = 2,
                            Ruta = "https://images.unsplash.com/photo-1473163928189-364b2c4e1135?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 8,
                            IdPublicacion = 2,
                            Ruta = "https://images.unsplash.com/photo-1483683804023-6ccdb62f86ef?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 9,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1512100356356-de1b84283e18?q=80&w=1375&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 10,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1533104816931-20fa691ff6ca?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 11,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1494783367193-149034c05e8f?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 12,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1533105079780-92b9be482077?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 13,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1719937206491-ed673f64be1f?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 14,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1499063078284-f78f7d89616a?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 15,
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1522199710521-72d69614c702?q=80&w=1472&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 16,
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 17,
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1512757776214-26d36777b513?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 18,
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1496950866446-3253e1470e8e?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 19,
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1476900543704-4312b78632f8?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 20,
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1707344088547-3cf7cea5ca49?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 21,
                            IdPublicacion = 5,
                            Ruta = "https://images.unsplash.com/photo-1530841377377-3ff06c0ca713?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 22,
                            IdPublicacion = 5,
                            Ruta = "https://images.unsplash.com/photo-1506929562872-bb421503ef21?q=80&w=1368&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 23,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1568849676085-51415703900f?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 24,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1467269204594-9661b134dd2b?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 25,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1516483638261-f4dbaf036963?q=80&w=1372&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 26,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1504150558240-0b4fd8946624?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 27,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1527631746610-bca00a040d60?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 28,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1446160657592-4782fb76fb99?q=80&w=1469&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 29,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1500301111609-42f1aa6df72a?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 30,
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1500815845799-7748ca339f27?q=80&w=1527&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 31,
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1507525428034-b723cf961d3e?q=80&w=1473&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 32,
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1526784725085-c69e947bf92e?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 33,
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1471623320832-752e8bbf8413?q=80&w=1410&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 34,
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1528164344705-47542687000d?q=80&w=1492&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 35,
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1491800943052-1059ce1e1012?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 36,
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1551918120-9739cb430c6d?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 37,
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1548625149-720134d51a3a?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 38,
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1492693429561-1c283eb1b2e8?q=80&w=1480&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 39,
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1532347922424-c652d9b7208e?q=80&w=1372&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 40,
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1567069160354-f25b26e62fa1?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 41,
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1705588217460-d548807940ad?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 42,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1558352541-95f7ac02fff2?q=80&w=1632&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 43,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1558461670-abf3421e18b6?q=80&w=1632&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 44,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1480497209098-7b9e9555bcee?q=80&w=1376&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 45,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1502489597346-dad15683d4c2?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 46,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1679420438051-19bd5aad4d67?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 47,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1692308516530-5ffc490476a8?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 48,
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1704803269187-d6eb334ea5fe?q=80&w=1472&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionRestriccion", b =>
                {
                    b.Property<int>("IdPublicacionRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionRestriccion"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdRestriccion")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionRestriccion");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdRestriccion");

                    b.ToTable("PublicacionesRestricciones");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionServicio", b =>
                {
                    b.Property<int>("IdPublicacionServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionServicio"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdServicio")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionServicio");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdServicio");

                    b.ToTable("PublicacionesServicios");
                });

            modelBuilder.Entity("Dviaje.Models.Resena", b =>
                {
                    b.Property<int>("IdResena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdResena"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdReserva")
                        .HasColumnType("integer");

                    b.Property<int>("MeGusta")
                        .HasColumnType("integer");

                    b.Property<string>("Opinion")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("text");

                    b.HasKey("IdResena");

                    b.HasIndex("IdReserva");

                    b.ToTable("Resenas");
                });

            modelBuilder.Entity("Dviaje.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReserva"));

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("integer");

                    b.Property<int>("ReservaEstado")
                        .HasColumnType("integer");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Dviaje.Models.Restriccion", b =>
                {
                    b.Property<int>("IdRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRestriccion"));

                    b.Property<string>("NombreRestriccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdRestriccion");

                    b.HasIndex("NombreRestriccion")
                        .IsUnique();

                    b.ToTable("Restricciones");
                });

            modelBuilder.Entity("Dviaje.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ServicioTipo")
                        .HasColumnType("integer");

                    b.HasKey("IdServicio");

                    b.HasIndex("NombreServicio")
                        .IsUnique();

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Dviaje.Models.ServicioAdicional", b =>
                {
                    b.Property<int>("IdServicioAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServicioAdicional"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdServicio")
                        .HasColumnType("integer");

                    b.Property<double>("PrecioServicioAdicional")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("IdServicioAdicional");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdServicio");

                    b.ToTable("ServiciosAdicionales");
                });

            modelBuilder.Entity("Dviaje.Models.Verificado", b =>
                {
                    b.Property<int>("IdVerificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVerificado"));

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("timestamp");

                    b.Property<string>("IdAliado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VerificadoEstado")
                        .HasColumnType("integer");

                    b.HasKey("IdVerificado");

                    b.HasIndex("IdAliado");

                    b.ToTable("Verificados");

                    b.HasData(
                        new
                        {
                            IdVerificado = 1,
                            FechaRespuesta = new DateTime(2024, 7, 15, 10, 10, 54, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 8, 8, 20, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 2,
                            FechaRespuesta = new DateTime(2024, 7, 18, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 3,
                            FechaRespuesta = new DateTime(2024, 7, 20, 16, 25, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 12, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 4,
                            FechaRespuesta = new DateTime(2024, 7, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 5,
                            FechaRespuesta = new DateTime(2024, 7, 25, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 18, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "39e10980-4df3-494a-bbe7-410e105f6551",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 6,
                            FechaRespuesta = new DateTime(2024, 7, 27, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 20, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c3733288-b354-445d-95da-4c655c3220b3",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 7,
                            FechaRespuesta = new DateTime(2024, 7, 29, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 22, 13, 20, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 8,
                            FechaRespuesta = new DateTime(2024, 8, 1, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 9,
                            FechaRespuesta = new DateTime(2024, 8, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 28, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 10,
                            FechaRespuesta = new DateTime(2024, 8, 6, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 30, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 11,
                            FechaSolicitud = new DateTime(2024, 8, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            VerificadoEstado = 0
                        },
                        new
                        {
                            IdVerificado = 12,
                            FechaSolicitud = new DateTime(2024, 8, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            VerificadoEstado = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1717add7-89b4-4bf7-990f-a9f10f18aa39",
                            Name = "Turista",
                            NormalizedName = "TURISTA"
                        },
                        new
                        {
                            Id = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894",
                            Name = "Aliado",
                            NormalizedName = "ALIADO"
                        },
                        new
                        {
                            Id = "4751f532-04d5-497f-b48d-b9e26bcffe6f",
                            Name = "Moderador",
                            NormalizedName = "MODERADOR"
                        },
                        new
                        {
                            Id = "e5cd3d4a-2687-49cd-b57c-c8eddfbf2e19",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "3a895383-b546-4693-8246-924a9fc5289f",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "1c8e89f7-7db6-4cd5-907d-f01b058cd784",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "13825fa6-5c27-4303-ab17-6e13aac24c12",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "230d9aeb-6bca-4faa-b867-2d49e1a8c12e",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "2e59aa62-61bd-4c8d-9a3d-13f461696eab",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "ca0a0328-0f5b-4ff3-b40e-6ffa8d145abb",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "39e10980-4df3-494a-bbe7-410e105f6551",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "c3733288-b354-445d-95da-4c655c3220b3",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "39e10980-4df3-494a-bbe7-410e105f6551",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "c3733288-b354-445d-95da-4c655c3220b3",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Dviaje.Models.Aliado", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("AliadoEstado")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("SitioWeb")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("Verificado")
                        .HasColumnType("boolean");

                    b.HasIndex("Direccion")
                        .IsUnique();

                    b.HasIndex("RazonSocial")
                        .IsUnique();

                    b.ToTable("AspNetUsers", t =>
                        {
                            t.Property("Avatar")
                                .HasColumnName("Aliado_Avatar");
                        });

                    b.HasDiscriminator().HasValue("Aliado");

                    b.HasData(
                        new
                        {
                            Id = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "db42ec69-852e-4754-9153-78e817763c2d",
                            Email = "info@colombiaadventure.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@COLOMBIAADVENTURE.COM",
                            NormalizedUserName = "COLOMBIAADV",
                            PhoneNumber = "3216549870",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "275e9fc2-af0e-4a41-bbd9-064bcd4a5445",
                            TwoFactorEnabled = false,
                            UserName = "ColombiaAdv",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1609137144813-7d9921338f24?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Carrera 7 # 45-23",
                            RazonSocial = "Colombia Adventure",
                            SitioWeb = "www.colombiaadventure.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e7d991cf-ec23-4191-b911-2e724f366711",
                            Email = "contact@bogotatours.co",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTACT@BOGOTATOURS.CO",
                            NormalizedUserName = "BOGOTATOURS",
                            PhoneNumber = "3123456789",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fccfc3b2-476a-40f1-a079-3b3c50614efa",
                            TwoFactorEnabled = false,
                            UserName = "BogotaTours",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1678009859747-9f4620e0c355?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Avenida 6 # 12-34",
                            RazonSocial = "Bogotá Tours",
                            SitioWeb = "www.bogotatours.co",
                            Verificado = true
                        },
                        new
                        {
                            Id = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6dbfb752-43f8-4b30-a4c5-5e269927cb24",
                            Email = "hello@medellinexplore.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HELLO@MEDELLINEXPLORE.COM",
                            NormalizedUserName = "MEDELLINEXPLORE",
                            PhoneNumber = "3198765432",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b28568fe-709d-4205-b0a8-2658a1ac9358",
                            TwoFactorEnabled = false,
                            UserName = "MedellinExplore",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1673213314908-5b1863e742d1?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Calle 80 # 25-67",
                            RazonSocial = "Medellín Explore",
                            SitioWeb = "www.medellinexplore.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5527b730-9738-4621-b8cc-83f113c992c0",
                            Email = "support@cartagenagetaways.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPPORT@CARTAGENAGETAWAYS.COM",
                            NormalizedUserName = "CARTAGENAGETAWAYS",
                            PhoneNumber = "3176543210",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b6e82f5a-53c3-4ca6-93a2-74f9bbfc5665",
                            TwoFactorEnabled = false,
                            UserName = "CartagenaGetaways",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1691225409811-a64942a0596a?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Bocagrande, Avenida San Martín # 11-43",
                            RazonSocial = "Cartagena Getaways",
                            SitioWeb = "www.cartagenagetaways.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "39e10980-4df3-494a-bbe7-410e105f6551",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "192606d1-898e-4144-ace0-13977608180d",
                            Email = "info@santamartaadventures.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@SANTAMARTAADVENTURES.COM",
                            NormalizedUserName = "SANTAMARTAADV",
                            PhoneNumber = "3154321098",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "42b1d00b-1258-49c0-b9ec-f24286b7bf66",
                            TwoFactorEnabled = false,
                            UserName = "SantaMartaAdv",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1543746746-46047c4f4bb0?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Centro Histórico, Carrera 2 # 10-55",
                            RazonSocial = "Santa Marta Adventures",
                            SitioWeb = "www.santamartaadventures.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "c3733288-b354-445d-95da-4c655c3220b3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "40c477f6-505d-4660-8105-46e5da10911f",
                            Email = "contact@caliexperiences.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTACT@CALIEXPERIENCES.COM",
                            NormalizedUserName = "CALIEXP",
                            PhoneNumber = "3132109876",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e0784ba1-c2c3-4050-9df5-486882cc71fd",
                            TwoFactorEnabled = false,
                            UserName = "CaliExp",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1523345863760-5b7f3472d14f?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Barrio San Antonio, Carrera 10 # 5-32",
                            RazonSocial = "Cali Experiences",
                            SitioWeb = "www.caliexperiences.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d87ab239-9aa8-4c41-8432-4c562f58f179",
                            Email = "hello@barranquillaescapes.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HELLO@BARRANQUILLAESCAPES.COM",
                            NormalizedUserName = "BQUILLAESCAPES",
                            PhoneNumber = "3140987654",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c34861f5-d240-4ca5-97c8-16071a21eb65",
                            TwoFactorEnabled = false,
                            UserName = "BquillaEscapes",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1492294112339-ea831887e5d7?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Vía 40 # 72-20",
                            RazonSocial = "Barranquilla Escapes",
                            SitioWeb = "www.barranquillaescapes.com",
                            Verificado = false
                        },
                        new
                        {
                            Id = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8df16be6-9e8e-4fce-9bbe-828cde8063c1",
                            Email = "support@bucaramangajourneys.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPPORT@BUCARAMANGAJOURNEYS.COM",
                            NormalizedUserName = "BUCARAJOURNEYS",
                            PhoneNumber = "3229876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "21f6c91c-33e3-4fdc-bd3b-dc01a77dfb91",
                            TwoFactorEnabled = false,
                            UserName = "BucaraJourneys",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1463839346397-8e9946845e6d?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fHR1cmlzbXxlbnwwfHwwfHx8Mg%3D%3D",
                            Direccion = "Cabecera, Carrera 33 # 45-67",
                            RazonSocial = "Bucaramanga Journeys",
                            SitioWeb = "www.bucaramangajourneys.com",
                            Verificado = false
                        },
                        new
                        {
                            Id = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "70f88e6f-5f97-4cf1-ad8c-c94816ccd6c6",
                            Email = "info@pereiratravels.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@PEREIRATRAVELS.COM",
                            NormalizedUserName = "PEREIRATRAVELS",
                            PhoneNumber = "3107654321",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "84b6bfe8-fe66-4e2b-a27d-f4d059d5c225",
                            TwoFactorEnabled = false,
                            UserName = "PereiraTravels",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1519998334409-c7c6b1147f65?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fHR1cmlzbXxlbnwwfHwwfHx8Mg%3D%3D",
                            Direccion = "Avenida Circunvalar # 18-10",
                            RazonSocial = "Pereira Travels",
                            SitioWeb = "www.pereiratravels.com",
                            Verificado = false
                        },
                        new
                        {
                            Id = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "533c43cf-e786-4f9f-856c-bcc8ed7282e9",
                            Email = "contact@manizaleswonders.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTACT@MANIZALESWONDERS.COM",
                            NormalizedUserName = "MANIZALESWONDERS",
                            PhoneNumber = "3165432109",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a3280a47-0cd8-43c3-b5b5-4f1e2d77ea73",
                            TwoFactorEnabled = false,
                            UserName = "ManizalesWonders",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1532878056386-1e96eb5221ad?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTJ8fHR1cmlzbXxlbnwwfHwwfHx8Mg%3D%3D",
                            Direccion = "Centro, Carrera 23 # 17-18",
                            RazonSocial = "Manizales Wonders",
                            SitioWeb = "www.manizaleswonders.com",
                            Verificado = false
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Usuario", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasIndex("Avatar")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Usuario");

                    b.HasData(
                        new
                        {
                            Id = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c2770f35-eec7-4d30-ba1d-d3133c71ce4e",
                            Email = "andres@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANDRES@GMAIL.COM",
                            NormalizedUserName = "ANDRES",
                            PhoneNumber = "3159725595",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4671b455-889b-49ea-bb2e-1eab9f4e4ec0",
                            TwoFactorEnabled = false,
                            UserName = "Andres",
                            Avatar = "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "17499518-3714-4485-bc2a-249225083ae6",
                            Email = "maria@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MARIA@GMAIL.COM",
                            NormalizedUserName = "MARIA",
                            PhoneNumber = "3101234567",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d1129c2f-6c8e-44b8-9a32-8bc2f7779c78",
                            TwoFactorEnabled = false,
                            UserName = "Maria",
                            Avatar = "https://plus.unsplash.com/premium_photo-1658527049634-15142565537a?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "904a01ba-aded-45ba-8a1a-6194fbd0646b",
                            Email = "carlos@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CARLOS@YAHOO.COM",
                            NormalizedUserName = "CARLOS",
                            PhoneNumber = "3189876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3cf35e4a-4ad8-4132-8383-cf04ee2c0a8e",
                            TwoFactorEnabled = false,
                            UserName = "Carlos",
                            Avatar = "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9faa103a-fb16-400e-9dd2-87ec45dd02ec",
                            Email = "sofia@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SOFIA@HOTMAIL.COM",
                            NormalizedUserName = "SOFIA",
                            PhoneNumber = "3123456789",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "49cef4bd-9437-44a9-9be8-e42d05811d42",
                            TwoFactorEnabled = false,
                            UserName = "Sofia",
                            Avatar = "https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "3a895383-b546-4693-8246-924a9fc5289f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1ac2642b-e2c0-4443-9e8c-5e3b0ed3bd44",
                            Email = "luis@outlook.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "LUIS@OUTLOOK.COM",
                            NormalizedUserName = "LUIS",
                            PhoneNumber = "3112345678",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "084840d3-6e59-4e22-984d-b79f00b3c254",
                            TwoFactorEnabled = false,
                            UserName = "Luis",
                            Avatar = "https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "1c8e89f7-7db6-4cd5-907d-f01b058cd784",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3260163f-6a81-4d0a-988e-67288ead02b9",
                            Email = "isabella@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ISABELLA@GMAIL.COM",
                            NormalizedUserName = "ISABELLA",
                            PhoneNumber = "3179876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c5b2b5c4-f178-4af9-88fb-55bed3a6040c",
                            TwoFactorEnabled = false,
                            UserName = "Isabella",
                            Avatar = "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "13825fa6-5c27-4303-ab17-6e13aac24c12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d87b850c-778e-4b7a-872b-695f57946e47",
                            Email = "fernando@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "FERNANDO@YAHOO.COM",
                            NormalizedUserName = "FERNANDO",
                            PhoneNumber = "3198765432",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4b1537d2-9c7e-4c8b-8915-4795de1abfa0",
                            TwoFactorEnabled = false,
                            UserName = "Fernando",
                            Avatar = "https://images.unsplash.com/photo-1543610892-0b1f7e6d8ac1?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "230d9aeb-6bca-4faa-b867-2d49e1a8c12e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ab4c3b6-3cce-4cb7-9b5a-1ad4ed53a83e",
                            Email = "ana@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANA@HOTMAIL.COM",
                            NormalizedUserName = "ANA",
                            PhoneNumber = "3149876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "673119d5-58ce-4d72-af2c-2fffbc0da5cb",
                            TwoFactorEnabled = false,
                            UserName = "Ana",
                            Avatar = "https://plus.unsplash.com/premium_photo-1670884441012-c5cf195c062a?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "2e59aa62-61bd-4c8d-9a3d-13f461696eab",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c98ca6ee-01fd-410d-aa5b-7d5cc3a2e084",
                            Email = "jorge@outlook.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JORGE@OUTLOOK.COM",
                            NormalizedUserName = "JORGE",
                            PhoneNumber = "3151234567",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b667053c-0dda-450e-892f-b4f66db97e48",
                            TwoFactorEnabled = false,
                            UserName = "Jorge",
                            Avatar = "https://images.unsplash.com/photo-1623582854588-d60de57fa33f?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTJ8fGF2YXRhcnxlbnwwfHwwfHx8MA%3D%3D"
                        },
                        new
                        {
                            Id = "ca0a0328-0f5b-4ff3-b40e-6ffa8d145abb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d025d057-7f75-4300-85ad-550aa3eac7b9",
                            Email = "gabriela@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "GABRIELA@GMAIL.COM",
                            NormalizedUserName = "GABRIELA",
                            PhoneNumber = "3169876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "934d56e6-1015-442e-a2e3-b328d75d0012",
                            TwoFactorEnabled = false,
                            UserName = "Gabriela",
                            Avatar = "https://images.unsplash.com/photo-1706885093487-7eda37b48a60?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTl8fGF2YXRhcnxlbnwwfHwwfHx8MA%3D%3D"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Adjunto", b =>
                {
                    b.HasOne("Dviaje.Models.AtencionViajero", "AtencionViajero")
                        .WithMany()
                        .HasForeignKey("IdAtencion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtencionViajero");
                });

            modelBuilder.Entity("Dviaje.Models.AtencionViajero", b =>
                {
                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.Favorito", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.FechaNoDisponible", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.HasOne("Dviaje.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliado");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionCategoria", b =>
                {
                    b.HasOne("Dviaje.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionFavorita", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionImagen", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionRestriccion", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Restriccion", "Restriccion")
                        .WithMany()
                        .HasForeignKey("IdRestriccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Restriccion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionServicio", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dviaje.Models.Resena", b =>
                {
                    b.HasOne("Dviaje.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("IdReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Dviaje.Models.Reserva", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.ServicioAdicional", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dviaje.Models.Verificado", b =>
                {
                    b.HasOne("Dviaje.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliado");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
