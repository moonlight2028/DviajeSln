// <auto-generated />
using System;
using Dviaje.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dviaje.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240830064934_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dviaje.Models.Adjunto", b =>
                {
                    b.Property<int>("IdAdjunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAdjunto"));

                    b.Property<int>("IdMensaje")
                        .HasColumnType("integer");

                    b.Property<string>("RutaAdjunto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdAdjunto");

                    b.HasIndex("IdMensaje");

                    b.HasIndex("RutaAdjunto")
                        .IsUnique();

                    b.ToTable("Adjuntos");

                    b.HasData(
                        new
                        {
                            IdAdjunto = 1,
                            IdMensaje = 1,
                            RutaAdjunto = "https://DViaje.com/adjuntos/queja_tourrtt.jpg"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.AtencionViajero", b =>
                {
                    b.Property<int>("IdAtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAtencion"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("AtencionViajeroEstado")
                        .HasColumnType("integer");

                    b.Property<int>("AtencionViajeroTipoPqrs")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("FechaAtencion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdAtencion");

                    b.ToTable("AtencionViajeros");

                    b.HasData(
                        new
                        {
                            IdAtencion = 1,
                            Asunto = "Queja por Servicio de Visita Guiada Retrasada el 25 de Julio",
                            AtencionViajeroEstado = 2,
                            AtencionViajeroTipoPqrs = 1,
                            FechaAtencion = new DateTimeOffset(new DateTime(2024, 7, 25, 10, 30, 50, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdCategoria");

                    b.HasIndex("NombreCategoria")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            NombreCategoria = "Finca",
                            RutaIcono = "fa-solid fa-sign-hanging"
                        },
                        new
                        {
                            IdCategoria = 2,
                            NombreCategoria = "Apartamento",
                            RutaIcono = "fa-solid fa-house-user"
                        },
                        new
                        {
                            IdCategoria = 3,
                            NombreCategoria = "Casa",
                            RutaIcono = "fa-solid fa-house"
                        },
                        new
                        {
                            IdCategoria = 4,
                            NombreCategoria = "Cabaña",
                            RutaIcono = "fa-solid fa-house-chimney"
                        },
                        new
                        {
                            IdCategoria = 5,
                            NombreCategoria = "Hotel",
                            RutaIcono = "fa-solid fa-hotel"
                        },
                        new
                        {
                            IdCategoria = 6,
                            NombreCategoria = "Hostal",
                            RutaIcono = "fa-solid fa-hotel"
                        },
                        new
                        {
                            IdCategoria = 7,
                            NombreCategoria = "Villa",
                            RutaIcono = "fa-solid fa-house-chimney-window"
                        },
                        new
                        {
                            IdCategoria = 8,
                            NombreCategoria = "Resort",
                            RutaIcono = "fa-solid fa-hotel"
                        },
                        new
                        {
                            IdCategoria = 9,
                            NombreCategoria = "Piso compartido",
                            RutaIcono = "fa-solid fa-people-roof"
                        },
                        new
                        {
                            IdCategoria = 10,
                            NombreCategoria = "Villa vacacional",
                            RutaIcono = "fa-solid fa-house-chimney-window"
                        },
                        new
                        {
                            IdCategoria = 11,
                            NombreCategoria = "Casa de campo",
                            RutaIcono = "fa-solid fa-house-chimney"
                        },
                        new
                        {
                            IdCategoria = 12,
                            NombreCategoria = "Campamentos",
                            RutaIcono = "fa-solid fa-campground"
                        },
                        new
                        {
                            IdCategoria = 13,
                            NombreCategoria = "Pensión",
                            RutaIcono = "fa-solid fa-house"
                        },
                        new
                        {
                            IdCategoria = 14,
                            NombreCategoria = "Motel",
                            RutaIcono = "fa-solid fa-hotel"
                        },
                        new
                        {
                            IdCategoria = 15,
                            NombreCategoria = "Apartahotel",
                            RutaIcono = "fa-solid fa-hotel"
                        },
                        new
                        {
                            IdCategoria = 16,
                            NombreCategoria = "Casa rural",
                            RutaIcono = "fa-solid fa-house-chimney"
                        },
                        new
                        {
                            IdCategoria = 17,
                            NombreCategoria = "Posada",
                            RutaIcono = "fa-solid fa-house"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Favorito", b =>
                {
                    b.Property<int>("IdFavorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFavorito"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdFavorito");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Favoritos");

                    b.HasData(
                        new
                        {
                            IdFavorito = 1,
                            IdPublicacion = 1,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7"
                        },
                        new
                        {
                            IdFavorito = 2,
                            IdPublicacion = 2,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7"
                        },
                        new
                        {
                            IdFavorito = 3,
                            IdPublicacion = 3,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7"
                        },
                        new
                        {
                            IdFavorito = 4,
                            IdPublicacion = 4,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7"
                        },
                        new
                        {
                            IdFavorito = 5,
                            IdPublicacion = 5,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798"
                        },
                        new
                        {
                            IdFavorito = 6,
                            IdPublicacion = 6,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798"
                        },
                        new
                        {
                            IdFavorito = 7,
                            IdPublicacion = 7,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798"
                        },
                        new
                        {
                            IdFavorito = 8,
                            IdPublicacion = 8,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798"
                        },
                        new
                        {
                            IdFavorito = 9,
                            IdPublicacion = 9,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798"
                        },
                        new
                        {
                            IdFavorito = 10,
                            IdPublicacion = 10,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798"
                        },
                        new
                        {
                            IdFavorito = 11,
                            IdPublicacion = 11,
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1"
                        },
                        new
                        {
                            IdFavorito = 12,
                            IdPublicacion = 11,
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1"
                        },
                        new
                        {
                            IdFavorito = 13,
                            IdPublicacion = 1,
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1"
                        },
                        new
                        {
                            IdFavorito = 14,
                            IdPublicacion = 2,
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1"
                        },
                        new
                        {
                            IdFavorito = 15,
                            IdPublicacion = 3,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 16,
                            IdPublicacion = 4,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 17,
                            IdPublicacion = 5,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 18,
                            IdPublicacion = 6,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 19,
                            IdPublicacion = 7,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 20,
                            IdPublicacion = 8,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 21,
                            IdPublicacion = 9,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 22,
                            IdPublicacion = 10,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7"
                        },
                        new
                        {
                            IdFavorito = 23,
                            IdPublicacion = 11,
                            IdUsuario = "3a895383-b546-4693-8246-924a9fc5289f"
                        },
                        new
                        {
                            IdFavorito = 24,
                            IdPublicacion = 12,
                            IdUsuario = "3a895383-b546-4693-8246-924a9fc5289f"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.FechaNoDisponible", b =>
                {
                    b.Property<int>("IdFechaNoDisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFechaNoDisponible"));

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.HasKey("IdFechaNoDisponible");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("FechasNoDisponibles");

                    b.HasData(
                        new
                        {
                            IdFechaNoDisponible = 1,
                            FechaFinal = new DateTime(2024, 7, 30, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 7, 20, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdFechaNoDisponible = 2,
                            FechaFinal = new DateTime(2024, 8, 7, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 8, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdFechaNoDisponible = 3,
                            FechaFinal = new DateTime(2024, 8, 15, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 8, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdFechaNoDisponible = 4,
                            FechaFinal = new DateTime(2024, 8, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 8, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdFechaNoDisponible = 5,
                            FechaFinal = new DateTime(2024, 8, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 8, 20, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdFechaNoDisponible = 6,
                            FechaFinal = new DateTime(2024, 8, 29, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 8, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 6
                        },
                        new
                        {
                            IdFechaNoDisponible = 7,
                            FechaFinal = new DateTime(2024, 9, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 8, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 7
                        },
                        new
                        {
                            IdFechaNoDisponible = 8,
                            FechaFinal = new DateTime(2024, 9, 10, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 9, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 8
                        },
                        new
                        {
                            IdFechaNoDisponible = 9,
                            FechaFinal = new DateTime(2024, 9, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 9, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdFechaNoDisponible = 10,
                            FechaFinal = new DateTime(2024, 9, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 9, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 10
                        },
                        new
                        {
                            IdFechaNoDisponible = 11,
                            FechaFinal = new DateTime(2024, 11, 20, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 11, 12, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 1
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Mensaje", b =>
                {
                    b.Property<int>("IdMensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMensaje"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTimeOffset>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdAtencionViajero")
                        .HasColumnType("integer");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("text");

                    b.Property<string>("MensajeDescripcion")
                        .HasMaxLength(250)
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdMensaje");

                    b.HasIndex("IdAtencionViajero");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Mensajes");

                    b.HasData(
                        new
                        {
                            IdMensaje = 1,
                            Fecha = new DateTimeOffset(new DateTime(2024, 7, 25, 10, 30, 50, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0)),
                            IdAtencionViajero = 1,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            MensajeDescripcion = "Me gustaría presentar una queja sobre el servicio recibido el pasado 25 de julio de 2024 a través de su plataforma de turismo. Ese día, tenía programada una visita guiada para las 10:00 a.m. en el centro histórico, pero la guía no llegó hasta las 11:30 a.m., sin ninguna explicación por parte del equipo de soporte. Además, la atención recibida fue poco profesional, ya que la guía no pudo responder adecuadamente a mis preguntas sobre los lugares visitados. Agradecería una revisión de este caso y una explicación sobre lo ocurrido, así como las medidas que se tomarán para evitar que situaciones similares se repitan en el futuro. /n Adjunto capturas de pantalla de los correos de confirmación de mi reserva y del pago realizado como referencia."
                        },
                        new
                        {
                            IdMensaje = 2,
                            Fecha = new DateTimeOffset(new DateTime(2024, 7, 26, 10, 30, 50, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0)),
                            IdAtencionViajero = 1,
                            IdUsuario = "fd0953f0-b46b-4070-9958-4a841eba3af7",
                            MensajeDescripcion = "Gracias por comunicarse con nosotros y por informarnos sobre su experiencia con nuestro servicio el 25 de julio de 2024. Lamentamos sinceramente los inconvenientes que experimentó durante su visita guiada y cualquier insatisfacción que esto le haya causado. /n Hemos revisado su caso y constatamos que hubo un problema de programación inesperado que retrasó la llegada de la guía. Apreciamos su paciencia y comprensión en esta situación. Hemos tomado medidas para mejorar nuestros procesos de planificación y comunicación con el equipo de guías para asegurarnos de que este tipo de incidentes no se repitan. /n Además, como gesto de disculpa, nos gustaría ofrecerle un reembolso completo del costo de su reserva y un descuento del 20% en su próxima visita con nosotros. Un representante de nuestro equipo se pondrá en contacto con usted en breve para gestionar el reembolso. /n Gracias por su comprensión y por darnos la oportunidad de corregir este error. Valoramos mucho su opinión y esperamos poder servirle mejor en el futuro."
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.Property<int>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<string>("IdAliado")
                        .HasColumnType("text");

                    b.Property<int>("NumeroResenas")
                        .HasColumnType("integer");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("Puntuacion")
                        .HasColumnType("numeric(2,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdPublicacion");

                    b.HasIndex("IdAliado");

                    b.ToTable("Publicaciones");

                    b.HasData(
                        new
                        {
                            IdPublicacion = 1,
                            Descripcion = "Descubre la magia de la naturaleza sin renunciar a las comodidades del hogar en Casa Quincha Glamping. Ubicada en un entorno sereno y pintoresco, nuestra experiencia de glamping combina el lujo y la aventura, ofreciendo una estancia inolvidable para quienes buscan relajarse y reconectar con el entorno natural.",
                            Direccion = "Km 5 Via San Francisco - Supatá, San Francisco 253601 Colombia",
                            Fecha = new DateTime(2024, 8, 1, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            NumeroResenas = 150,
                            Precio = 813000m,
                            Puntuacion = 4.3m,
                            Titulo = "Casa Quincha Glamping"
                        },
                        new
                        {
                            IdPublicacion = 2,
                            Descripcion = "Sumérgete en la tranquilidad de la naturaleza en Eco Lodge del Valle. Ofrecemos cabañas ecológicas con vistas impresionantes, actividades al aire libre y un enfoque en la sostenibilidad. Perfecto para quienes buscan un escape relajante y responsable.",
                            Direccion = "Vereda El Dorado, Valle de Cauca, Colombia",
                            Fecha = new DateTime(2024, 8, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            NumeroResenas = 98,
                            Precio = 925000m,
                            Puntuacion = 4.7m,
                            Titulo = "Eco Lodge del Valle"
                        },
                        new
                        {
                            IdPublicacion = 3,
                            Descripcion = "Refugio del Bosque ofrece una experiencia única en medio de un bosque encantado. Disfruta de nuestras cabañas acogedoras, senderos para caminatas y actividades al aire libre. Ideal para familias y aventureros.",
                            Direccion = "Km 10 Via Manizales - Chinchina, Manizales, Colombia",
                            Fecha = new DateTime(2024, 8, 3, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            NumeroResenas = 76,
                            Precio = 675000m,
                            Puntuacion = 4.2m,
                            Titulo = "Refugio del Bosque"
                        },
                        new
                        {
                            IdPublicacion = 4,
                            Descripcion = "Descubre el lujo y la serenidad en Oasis de la Sierra. Nuestra propiedad ofrece vistas espectaculares, instalaciones de primera clase y actividades exclusivas en un entorno montañoso inigualable.",
                            Direccion = "Avenida de los Andes, Cúcuta, Colombia",
                            Fecha = new DateTime(2024, 8, 4, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            NumeroResenas = 120,
                            Precio = 1150000m,
                            Puntuacion = 4.6m,
                            Titulo = "Oasis de la Sierra"
                        },
                        new
                        {
                            IdPublicacion = 5,
                            Descripcion = "Villas del Mar ofrece una experiencia de lujo frente al mar con villas privadas, piscina infinita y servicios personalizados. Ideal para escapadas románticas o celebraciones especiales.",
                            Direccion = "Playa de San Andrés, San Andrés, Colombia",
                            Fecha = new DateTime(2024, 8, 5, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            NumeroResenas = 134,
                            Precio = 1500000m,
                            Puntuacion = 4.8m,
                            Titulo = "Villas del Mar"
                        },
                        new
                        {
                            IdPublicacion = 6,
                            Descripcion = "Disfruta de una estancia relajante en Cabañas del Río, rodeado de la belleza natural de la región. Ofrecemos cabañas rústicas con acceso directo al río y actividades de pesca y senderismo.",
                            Direccion = "Vereda El Río, Medellín, Colombia",
                            Fecha = new DateTime(2024, 8, 6, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            NumeroResenas = 85,
                            Precio = 720000m,
                            Puntuacion = 4.4m,
                            Titulo = "Cabañas del Río"
                        },
                        new
                        {
                            IdPublicacion = 7,
                            Descripcion = "Rincón del Viento ofrece una experiencia de glamping en medio de la naturaleza con tiendas de lujo, fogatas y una vista impresionante de las montañas. Perfecto para una escapada romántica o una aventura familiar.",
                            Direccion = "Km 20 Via Villa de Leyva, Boyacá, Colombia",
                            Fecha = new DateTime(2024, 8, 7, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "39e10980-4df3-494a-bbe7-410e105f6551",
                            NumeroResenas = 63,
                            Precio = 860000m,
                            Puntuacion = 4.1m,
                            Titulo = "Rincón del Viento"
                        },
                        new
                        {
                            IdPublicacion = 8,
                            Descripcion = "Hotel del Lago ofrece una estancia lujosa con vistas al lago, spa, y restaurante gourmet. Ideal para una experiencia de relax y confort con servicios de alta calidad.",
                            Direccion = "Río Guatapé, Antioquia, Colombia",
                            Fecha = new DateTime(2024, 8, 8, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "39e10980-4df3-494a-bbe7-410e105f6551",
                            NumeroResenas = 142,
                            Precio = 1050000m,
                            Puntuacion = 4.5m,
                            Titulo = "Hotel del Lago"
                        },
                        new
                        {
                            IdPublicacion = 9,
                            Descripcion = "Vive una experiencia de bienestar total en nuestro centro de bienestar natural. Ofrecemos retiros de meditación, yoga, y spa en un entorno tranquilo y rejuvenecedor.",
                            Direccion = "Vereda La Primavera, Bogotá, Colombia",
                            Fecha = new DateTime(2024, 8, 9, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c3733288-b354-445d-95da-4c655c3220b3",
                            NumeroResenas = 167,
                            Precio = 1300000m,
                            Puntuacion = 1.0m,
                            Titulo = "Centro de Bienestar Natural"
                        },
                        new
                        {
                            IdPublicacion = 10,
                            Descripcion = "Aventura en la Selva ofrece una experiencia única de ecoturismo con cabañas en la selva, guías especializados y actividades de exploración en la biodiversidad local.",
                            Direccion = "Reserva Natural del Amazonas, Leticia, Colombia",
                            Fecha = new DateTime(2024, 8, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            NumeroResenas = 110,
                            Precio = 930000m,
                            Puntuacion = 1.3m,
                            Titulo = "Aventura en la Selva"
                        },
                        new
                        {
                            IdPublicacion = 11,
                            Descripcion = "Casas del Valle ofrece una estancia encantadora en casas de campo tradicionales con acceso a actividades al aire libre, incluyendo paseos a caballo y rutas de senderismo.",
                            Direccion = "Vereda El Valle, Tunja, Colombia",
                            Fecha = new DateTime(2024, 8, 11, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            NumeroResenas = 95,
                            Precio = 785000m,
                            Puntuacion = 2.4m,
                            Titulo = "Casas del Valle"
                        },
                        new
                        {
                            IdPublicacion = 12,
                            Descripcion = "Camping de Montaña ofrece una experiencia auténtica de campamento con acceso a rutas de senderismo y vistas panorámicas de las montañas. Perfecto para los amantes de la naturaleza y la aventura.",
                            Direccion = "Parque Nacional de los Nevados, Manizales, Colombia",
                            Fecha = new DateTime(2024, 8, 12, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            NumeroResenas = 80,
                            Precio = 590000m,
                            Puntuacion = 3.0m,
                            Titulo = "Camping de Montaña"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionCategoria", b =>
                {
                    b.Property<int>("IdPublicacionCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionCategoria"));

                    b.Property<int>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionCategoria");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesCategorias");

                    b.HasData(
                        new
                        {
                            IdPublicacionCategoria = 1,
                            IdCategoria = 1,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionCategoria = 2,
                            IdCategoria = 2,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionCategoria = 3,
                            IdCategoria = 3,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionCategoria = 4,
                            IdCategoria = 4,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionCategoria = 5,
                            IdCategoria = 4,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionCategoria = 6,
                            IdCategoria = 5,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionCategoria = 7,
                            IdCategoria = 6,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionCategoria = 8,
                            IdCategoria = 7,
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdPublicacionCategoria = 9,
                            IdCategoria = 8,
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdPublicacionCategoria = 10,
                            IdCategoria = 9,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 11,
                            IdCategoria = 10,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 12,
                            IdCategoria = 11,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 13,
                            IdCategoria = 12,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 14,
                            IdCategoria = 13,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 15,
                            IdCategoria = 14,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 16,
                            IdCategoria = 15,
                            IdPublicacion = 6
                        },
                        new
                        {
                            IdPublicacionCategoria = 17,
                            IdCategoria = 16,
                            IdPublicacion = 6
                        },
                        new
                        {
                            IdPublicacionCategoria = 18,
                            IdCategoria = 17,
                            IdPublicacion = 7
                        },
                        new
                        {
                            IdPublicacionCategoria = 19,
                            IdCategoria = 1,
                            IdPublicacion = 8
                        },
                        new
                        {
                            IdPublicacionCategoria = 20,
                            IdCategoria = 2,
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdPublicacionCategoria = 21,
                            IdCategoria = 3,
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdPublicacionCategoria = 22,
                            IdCategoria = 4,
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdPublicacionCategoria = 23,
                            IdCategoria = 5,
                            IdPublicacion = 10
                        },
                        new
                        {
                            IdPublicacionCategoria = 24,
                            IdCategoria = 6,
                            IdPublicacion = 10
                        },
                        new
                        {
                            IdPublicacionCategoria = 25,
                            IdCategoria = 7,
                            IdPublicacion = 11
                        },
                        new
                        {
                            IdPublicacionCategoria = 26,
                            IdCategoria = 8,
                            IdPublicacion = 12
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionFavorita", b =>
                {
                    b.Property<int>("IdPublicacionFavorita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionFavorita"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionFavorita");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesFavoritas");

                    b.HasData(
                        new
                        {
                            IdPublicacionFavorita = 1,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionFavorita = 2,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionFavorita = 3,
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdPublicacionFavorita = 4,
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdPublicacionFavorita = 5,
                            IdPublicacion = 5
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionImagen", b =>
                {
                    b.Property<int>("IdPublicacionImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionImagen"));

                    b.Property<string>("Alt")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdPublicacionImagen");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("Ruta")
                        .IsUnique();

                    b.ToTable("PublicacionesImagenes");

                    b.HasData(
                        new
                        {
                            IdPublicacionImagen = 1,
                            Alt = "Vista panorámica de la playa con arena blanca y aguas cristalinas en una soleada tarde de verano",
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1707343848552-893e05dba6ac?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 2,
                            Alt = "Sendero en un bosque denso lleno de árboles altos",
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1500835556837-99ac94a94552?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 3,
                            Alt = "Antiguo castillo medieval situado en lo alto de una colina",
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1469854523086-cc02fe5d8800?q=80&w=1421&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 4,
                            Alt = "Cascada en medio de un bosque tropical exuberante",
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1433086966358-54859d0ed716?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 5,
                            Alt = "Calle adoquinada en una ciudad histórica con edificios coloridos",
                            IdPublicacion = 1,
                            Ruta = "https://images.unsplash.com/photo-1504598318550-17eba1008a68?q=80&w=1372&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 6,
                            Alt = "Tranquilo lago reflejando majestuosas montañas en el fondo",
                            IdPublicacion = 2,
                            Ruta = "https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 7,
                            Alt = "Puente colgante sobre un cañón profundo y pintoresco",
                            IdPublicacion = 2,
                            Ruta = "https://images.unsplash.com/photo-1473163928189-364b2c4e1135?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 8,
                            Alt = "Mercado local vibrante con frutas exóticas y artesanías",
                            IdPublicacion = 2,
                            Ruta = "https://images.unsplash.com/photo-1483683804023-6ccdb62f86ef?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 9,
                            Alt = "Ruinas de una antigua civilización en un paisaje desértico",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1512100356356-de1b84283e18?q=80&w=1375&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 10,
                            Alt = "Jardín botánico con una impresionante variedad de flores",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1533104816931-20fa691ff6ca?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 11,
                            Alt = "Playa aislada con palmeras y aguas turquesas cristalinas",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1494783367193-149034c05e8f?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 12,
                            Alt = "Puesta de sol espectacular sobre el océano en un día despejado",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1533105079780-92b9be482077?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 13,
                            Alt = "Vistas impresionantes de un río serpenteante en el valle",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1719937206491-ed673f64be1f?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 14,
                            Alt = "Acantilados dramáticos con vistas al mar abierto",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1499063078284-f78f7d89616a?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 15,
                            Alt = "Pueblo pintoresco en la ladera de una montaña",
                            IdPublicacion = 3,
                            Ruta = "https://images.unsplash.com/photo-1522199710521-72d69614c702?q=80&w=1472&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 16,
                            Alt = "Glaciares brillando bajo la luz del sol en un paisaje helado",
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 17,
                            Alt = "Selva tropical densa con una ligera niebla matutina",
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1512757776214-26d36777b513?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 18,
                            Alt = "Campos de lavanda en flor bajo un cielo azul claro",
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1496950866446-3253e1470e8e?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 19,
                            Alt = "Viñedos ondulantes que cubren colinas soleadas",
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1476900543704-4312b78632f8?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 20,
                            Alt = "Desierto dorado bajo un cielo despejado y azul",
                            IdPublicacion = 4,
                            Ruta = "https://images.unsplash.com/photo-1707344088547-3cf7cea5ca49?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 21,
                            Alt = "Isla tropical con playas de arena blanca y palmeras",
                            IdPublicacion = 5,
                            Ruta = "https://images.unsplash.com/photo-1530841377377-3ff06c0ca713?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 22,
                            Alt = "Camino rural bordeado de girasoles bajo un cielo despejado",
                            IdPublicacion = 5,
                            Ruta = "https://images.unsplash.com/photo-1506929562872-bb421503ef21?q=80&w=1368&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 23,
                            Alt = "Cañón con formaciones rocosas y un río al fondo",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1568849676085-51415703900f?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 24,
                            Alt = "Templo antiguo rodeado de naturaleza exuberante",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1467269204594-9661b134dd2b?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 25,
                            Alt = "Parque nacional con una vasta pradera verde y montañas",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1516483638261-f4dbaf036963?q=80&w=1372&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 26,
                            Alt = "Ciudad moderna con rascacielos al atardecer",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1504150558240-0b4fd8946624?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 27,
                            Alt = "Vista aérea de un arrecife de coral en aguas turquesas",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1527631746610-bca00a040d60?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 28,
                            Alt = "Bahía serena con barcos veleros flotando tranquilamente",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1446160657592-4782fb76fb99?q=80&w=1469&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 29,
                            Alt = "Volcán activo con humo saliendo del cráter",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1500301111609-42f1aa6df72a?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 30,
                            Alt = "Camino de montaña cubierto de flores silvestres en primavera",
                            IdPublicacion = 6,
                            Ruta = "https://images.unsplash.com/photo-1500815845799-7748ca339f27?q=80&w=1527&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 31,
                            Alt = "Carretera costera con impresionantes vistas al mar",
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1507525428034-b723cf961d3e?q=80&w=1473&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 32,
                            Alt = "Campo de tulipanes multicolores en un día soleado",
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1526784725085-c69e947bf92e?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 33,
                            Alt = "Lago congelado rodeado de montañas nevadas",
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1471623320832-752e8bbf8413?q=80&w=1410&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 34,
                            Alt = "Pueblo pesquero con barcos amarrados en el puerto",
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1528164344705-47542687000d?q=80&w=1492&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 35,
                            Alt = "Ruinas romanas en un paisaje mediterráneo",
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1491800943052-1059ce1e1012?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 36,
                            Alt = "Selva amazónica vista desde arriba",
                            IdPublicacion = 8,
                            Ruta = "https://images.unsplash.com/photo-1551918120-9739cb430c6d?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 37,
                            Alt = "Desierto con dunas de arena y un oasis en el horizonte",
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1548625149-720134d51a3a?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 38,
                            Alt = "Granja en el campo con colinas ondulantes de fondo",
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1492693429561-1c283eb1b2e8?q=80&w=1480&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 39,
                            Alt = "Plaza de una ciudad europea con una fuente central",
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1532347922424-c652d9b7208e?q=80&w=1372&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 40,
                            Alt = "Atardecer sobre el puente Golden Gate en San Francisco",
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1567069160354-f25b26e62fa1?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 41,
                            Alt = "Panorama de un fiordo noruego con aguas tranquilas",
                            IdPublicacion = 9,
                            Ruta = "https://images.unsplash.com/photo-1705588217460-d548807940ad?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 42,
                            Alt = "Camino de tierra serpenteante en un bosque de pinos",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1558352541-95f7ac02fff2?q=80&w=1632&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 43,
                            Alt = "Catedral gótica en el centro de una ciudad histórica",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1558461670-abf3421e18b6?q=80&w=1632&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 44,
                            Alt = "Costa rocosa con olas rompiendo contra los acantilados",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1480497209098-7b9e9555bcee?q=80&w=1376&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 45,
                            Alt = "Vista de un valle alpino con pastizales verdes",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1502489597346-dad15683d4c2?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 46,
                            Alt = "Auroras boreales iluminando el cielo en el Ártico",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1679420438051-19bd5aad4d67?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 47,
                            Alt = "Pueblo medieval rodeado por murallas antiguas",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1692308516530-5ffc490476a8?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 48,
                            Alt = "Río bordeado por árboles en pleno otoño",
                            IdPublicacion = 10,
                            Ruta = "https://images.unsplash.com/photo-1704803269187-d6eb334ea5fe?q=80&w=1472&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 49,
                            Alt = "Cabaña rústica en un paisaje montañoso",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1643234804946-7ae71ca3aea3?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 50,
                            Alt = "Mercado al aire libre con puestos de comida local",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1688321998704-e5bba733728c?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 51,
                            Alt = "Vista del horizonte de Nueva York desde el agua",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1622343782402-94ea774c4f61?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 52,
                            Alt = "Sendero costero con vistas al océano Atlántico",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1707073687377-fbda787a7db9?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 53,
                            Alt = "Campo de arrozales en terrazas al atardecer",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1646672571916-453b48d71710?q=80&w=1978&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 54,
                            Alt = "Parque nacional con formaciones rocosas únicas",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1649807944854-a7b57dd6afb5?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 55,
                            Alt = "Isla volcánica con playas de arena negra",
                            IdPublicacion = 7,
                            Ruta = "https://images.unsplash.com/photo-1577741553317-7f231343599a?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 56,
                            Alt = "Jardines palaciegos con estatuas clásicas y fuentes",
                            IdPublicacion = 11,
                            Ruta = "https://images.unsplash.com/photo-1573435708546-32beaff245c1?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 57,
                            Alt = "Cueva iluminada por luces de colores en su interior",
                            IdPublicacion = 11,
                            Ruta = "https://images.unsplash.com/photo-1708187181457-8bafec80833a?q=80&w=2077&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 58,
                            Alt = "Viejo faro en un acantilado con vistas al océano",
                            IdPublicacion = 11,
                            Ruta = "https://images.unsplash.com/photo-1683384546413-d207b5677dc0?q=80&w=2076&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 59,
                            Alt = "Carretera escénica a través de colinas de té",
                            IdPublicacion = 11,
                            Ruta = "https://images.unsplash.com/photo-1610228328499-53c36a14dbc1?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 60,
                            Alt = "Paisaje ártico con icebergs flotando en el agua",
                            IdPublicacion = 11,
                            Ruta = "https://images.unsplash.com/photo-1656371559747-1ca93a271206?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 61,
                            Alt = "Puente de madera cruzando un río en un bosque",
                            IdPublicacion = 11,
                            Ruta = "https://images.unsplash.com/photo-1635222722123-fd2b74b6bc9d?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 62,
                            Alt = "Murallas antiguas rodeando una ciudad medieval",
                            IdPublicacion = 12,
                            Ruta = "https://images.unsplash.com/photo-1707073687052-0edc1463d1f8?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 63,
                            Alt = "Jardines japoneses con estanques y bonsáis",
                            IdPublicacion = 12,
                            Ruta = "https://images.unsplash.com/photo-1705373069474-e01b8b18b6f6?q=80&w=2073&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 64,
                            Alt = "Vistas panorámicas de una ciudad desde una colina",
                            IdPublicacion = 12,
                            Ruta = "https://images.unsplash.com/photo-1688254708497-732d5a8d923b?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 65,
                            Alt = "Desfiladero con paredes de roca y un río serpenteante",
                            IdPublicacion = 12,
                            Ruta = "https://images.unsplash.com/photo-1663948017079-2906ed90a5d6?q=80&w=1936&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        },
                        new
                        {
                            IdPublicacionImagen = 66,
                            Alt = "Ruinas mayas en medio de la selva",
                            IdPublicacion = 12,
                            Ruta = "https://images.unsplash.com/photo-1573435708534-6b6dbc589bfc?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionRestriccion", b =>
                {
                    b.Property<int>("IdPublicacionRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionRestriccion"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdRestriccion")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionRestriccion");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdRestriccion");

                    b.ToTable("PublicacionesRestricciones");

                    b.HasData(
                        new
                        {
                            IdPublicacionRestriccion = 1,
                            IdPublicacion = 1,
                            IdRestriccion = 1
                        },
                        new
                        {
                            IdPublicacionRestriccion = 2,
                            IdPublicacion = 1,
                            IdRestriccion = 2
                        },
                        new
                        {
                            IdPublicacionRestriccion = 3,
                            IdPublicacion = 2,
                            IdRestriccion = 3
                        },
                        new
                        {
                            IdPublicacionRestriccion = 4,
                            IdPublicacion = 3,
                            IdRestriccion = 4
                        },
                        new
                        {
                            IdPublicacionRestriccion = 5,
                            IdPublicacion = 3,
                            IdRestriccion = 5
                        },
                        new
                        {
                            IdPublicacionRestriccion = 6,
                            IdPublicacion = 5,
                            IdRestriccion = 6
                        },
                        new
                        {
                            IdPublicacionRestriccion = 7,
                            IdPublicacion = 7,
                            IdRestriccion = 7
                        },
                        new
                        {
                            IdPublicacionRestriccion = 8,
                            IdPublicacion = 8,
                            IdRestriccion = 8
                        },
                        new
                        {
                            IdPublicacionRestriccion = 9,
                            IdPublicacion = 8,
                            IdRestriccion = 9
                        },
                        new
                        {
                            IdPublicacionRestriccion = 10,
                            IdPublicacion = 9,
                            IdRestriccion = 10
                        },
                        new
                        {
                            IdPublicacionRestriccion = 11,
                            IdPublicacion = 10,
                            IdRestriccion = 11
                        },
                        new
                        {
                            IdPublicacionRestriccion = 12,
                            IdPublicacion = 11,
                            IdRestriccion = 1
                        },
                        new
                        {
                            IdPublicacionRestriccion = 13,
                            IdPublicacion = 12,
                            IdRestriccion = 2
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionServicio", b =>
                {
                    b.Property<int>("IdPublicacionServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPublicacionServicio"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdServicio")
                        .HasColumnType("integer");

                    b.HasKey("IdPublicacionServicio");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdServicio");

                    b.ToTable("PublicacionesServicios");

                    b.HasData(
                        new
                        {
                            IdPublicacionServicio = 1,
                            IdPublicacion = 1,
                            IdServicio = 2
                        },
                        new
                        {
                            IdPublicacionServicio = 2,
                            IdPublicacion = 1,
                            IdServicio = 3
                        },
                        new
                        {
                            IdPublicacionServicio = 3,
                            IdPublicacion = 1,
                            IdServicio = 4
                        },
                        new
                        {
                            IdPublicacionServicio = 4,
                            IdPublicacion = 1,
                            IdServicio = 5
                        },
                        new
                        {
                            IdPublicacionServicio = 5,
                            IdPublicacion = 1,
                            IdServicio = 8
                        },
                        new
                        {
                            IdPublicacionServicio = 6,
                            IdPublicacion = 1,
                            IdServicio = 10
                        },
                        new
                        {
                            IdPublicacionServicio = 7,
                            IdPublicacion = 1,
                            IdServicio = 11
                        },
                        new
                        {
                            IdPublicacionServicio = 8,
                            IdPublicacion = 2,
                            IdServicio = 12
                        },
                        new
                        {
                            IdPublicacionServicio = 9,
                            IdPublicacion = 2,
                            IdServicio = 13
                        },
                        new
                        {
                            IdPublicacionServicio = 10,
                            IdPublicacion = 2,
                            IdServicio = 14
                        },
                        new
                        {
                            IdPublicacionServicio = 11,
                            IdPublicacion = 2,
                            IdServicio = 15
                        },
                        new
                        {
                            IdPublicacionServicio = 12,
                            IdPublicacion = 2,
                            IdServicio = 16
                        },
                        new
                        {
                            IdPublicacionServicio = 13,
                            IdPublicacion = 2,
                            IdServicio = 17
                        },
                        new
                        {
                            IdPublicacionServicio = 14,
                            IdPublicacion = 2,
                            IdServicio = 18
                        },
                        new
                        {
                            IdPublicacionServicio = 15,
                            IdPublicacion = 2,
                            IdServicio = 19
                        },
                        new
                        {
                            IdPublicacionServicio = 16,
                            IdPublicacion = 3,
                            IdServicio = 20
                        },
                        new
                        {
                            IdPublicacionServicio = 17,
                            IdPublicacion = 3,
                            IdServicio = 21
                        },
                        new
                        {
                            IdPublicacionServicio = 18,
                            IdPublicacion = 3,
                            IdServicio = 22
                        },
                        new
                        {
                            IdPublicacionServicio = 19,
                            IdPublicacion = 3,
                            IdServicio = 23
                        },
                        new
                        {
                            IdPublicacionServicio = 20,
                            IdPublicacion = 3,
                            IdServicio = 24
                        },
                        new
                        {
                            IdPublicacionServicio = 21,
                            IdPublicacion = 3,
                            IdServicio = 25
                        },
                        new
                        {
                            IdPublicacionServicio = 22,
                            IdPublicacion = 3,
                            IdServicio = 26
                        },
                        new
                        {
                            IdPublicacionServicio = 23,
                            IdPublicacion = 3,
                            IdServicio = 27
                        },
                        new
                        {
                            IdPublicacionServicio = 24,
                            IdPublicacion = 3,
                            IdServicio = 28
                        },
                        new
                        {
                            IdPublicacionServicio = 25,
                            IdPublicacion = 4,
                            IdServicio = 29
                        },
                        new
                        {
                            IdPublicacionServicio = 26,
                            IdPublicacion = 4,
                            IdServicio = 30
                        },
                        new
                        {
                            IdPublicacionServicio = 27,
                            IdPublicacion = 4,
                            IdServicio = 31
                        },
                        new
                        {
                            IdPublicacionServicio = 28,
                            IdPublicacion = 4,
                            IdServicio = 32
                        },
                        new
                        {
                            IdPublicacionServicio = 29,
                            IdPublicacion = 4,
                            IdServicio = 33
                        },
                        new
                        {
                            IdPublicacionServicio = 30,
                            IdPublicacion = 4,
                            IdServicio = 34
                        },
                        new
                        {
                            IdPublicacionServicio = 31,
                            IdPublicacion = 4,
                            IdServicio = 35
                        },
                        new
                        {
                            IdPublicacionServicio = 32,
                            IdPublicacion = 4,
                            IdServicio = 1
                        },
                        new
                        {
                            IdPublicacionServicio = 33,
                            IdPublicacion = 4,
                            IdServicio = 2
                        },
                        new
                        {
                            IdPublicacionServicio = 34,
                            IdPublicacion = 4,
                            IdServicio = 3
                        },
                        new
                        {
                            IdPublicacionServicio = 35,
                            IdPublicacion = 4,
                            IdServicio = 5
                        },
                        new
                        {
                            IdPublicacionServicio = 36,
                            IdPublicacion = 4,
                            IdServicio = 6
                        },
                        new
                        {
                            IdPublicacionServicio = 37,
                            IdPublicacion = 4,
                            IdServicio = 7
                        },
                        new
                        {
                            IdPublicacionServicio = 38,
                            IdPublicacion = 5,
                            IdServicio = 8
                        },
                        new
                        {
                            IdPublicacionServicio = 39,
                            IdPublicacion = 5,
                            IdServicio = 9
                        },
                        new
                        {
                            IdPublicacionServicio = 40,
                            IdPublicacion = 5,
                            IdServicio = 10
                        },
                        new
                        {
                            IdPublicacionServicio = 41,
                            IdPublicacion = 5,
                            IdServicio = 11
                        },
                        new
                        {
                            IdPublicacionServicio = 42,
                            IdPublicacion = 6,
                            IdServicio = 12
                        },
                        new
                        {
                            IdPublicacionServicio = 43,
                            IdPublicacion = 6,
                            IdServicio = 13
                        },
                        new
                        {
                            IdPublicacionServicio = 44,
                            IdPublicacion = 6,
                            IdServicio = 14
                        },
                        new
                        {
                            IdPublicacionServicio = 45,
                            IdPublicacion = 6,
                            IdServicio = 15
                        },
                        new
                        {
                            IdPublicacionServicio = 46,
                            IdPublicacion = 6,
                            IdServicio = 16
                        },
                        new
                        {
                            IdPublicacionServicio = 47,
                            IdPublicacion = 6,
                            IdServicio = 17
                        },
                        new
                        {
                            IdPublicacionServicio = 48,
                            IdPublicacion = 6,
                            IdServicio = 18
                        },
                        new
                        {
                            IdPublicacionServicio = 49,
                            IdPublicacion = 6,
                            IdServicio = 19
                        },
                        new
                        {
                            IdPublicacionServicio = 50,
                            IdPublicacion = 6,
                            IdServicio = 20
                        },
                        new
                        {
                            IdPublicacionServicio = 51,
                            IdPublicacion = 6,
                            IdServicio = 21
                        },
                        new
                        {
                            IdPublicacionServicio = 52,
                            IdPublicacion = 6,
                            IdServicio = 22
                        },
                        new
                        {
                            IdPublicacionServicio = 53,
                            IdPublicacion = 7,
                            IdServicio = 23
                        },
                        new
                        {
                            IdPublicacionServicio = 54,
                            IdPublicacion = 7,
                            IdServicio = 24
                        },
                        new
                        {
                            IdPublicacionServicio = 55,
                            IdPublicacion = 7,
                            IdServicio = 25
                        },
                        new
                        {
                            IdPublicacionServicio = 56,
                            IdPublicacion = 7,
                            IdServicio = 26
                        },
                        new
                        {
                            IdPublicacionServicio = 57,
                            IdPublicacion = 8,
                            IdServicio = 27
                        },
                        new
                        {
                            IdPublicacionServicio = 58,
                            IdPublicacion = 8,
                            IdServicio = 28
                        },
                        new
                        {
                            IdPublicacionServicio = 59,
                            IdPublicacion = 8,
                            IdServicio = 29
                        },
                        new
                        {
                            IdPublicacionServicio = 60,
                            IdPublicacion = 9,
                            IdServicio = 30
                        },
                        new
                        {
                            IdPublicacionServicio = 61,
                            IdPublicacion = 9,
                            IdServicio = 31
                        },
                        new
                        {
                            IdPublicacionServicio = 62,
                            IdPublicacion = 9,
                            IdServicio = 32
                        },
                        new
                        {
                            IdPublicacionServicio = 63,
                            IdPublicacion = 9,
                            IdServicio = 33
                        },
                        new
                        {
                            IdPublicacionServicio = 64,
                            IdPublicacion = 9,
                            IdServicio = 34
                        },
                        new
                        {
                            IdPublicacionServicio = 65,
                            IdPublicacion = 9,
                            IdServicio = 35
                        },
                        new
                        {
                            IdPublicacionServicio = 66,
                            IdPublicacion = 9,
                            IdServicio = 1
                        },
                        new
                        {
                            IdPublicacionServicio = 67,
                            IdPublicacion = 9,
                            IdServicio = 2
                        },
                        new
                        {
                            IdPublicacionServicio = 68,
                            IdPublicacion = 9,
                            IdServicio = 3
                        },
                        new
                        {
                            IdPublicacionServicio = 69,
                            IdPublicacion = 10,
                            IdServicio = 4
                        },
                        new
                        {
                            IdPublicacionServicio = 70,
                            IdPublicacion = 10,
                            IdServicio = 5
                        },
                        new
                        {
                            IdPublicacionServicio = 71,
                            IdPublicacion = 10,
                            IdServicio = 6
                        },
                        new
                        {
                            IdPublicacionServicio = 72,
                            IdPublicacion = 10,
                            IdServicio = 7
                        },
                        new
                        {
                            IdPublicacionServicio = 73,
                            IdPublicacion = 10,
                            IdServicio = 8
                        },
                        new
                        {
                            IdPublicacionServicio = 74,
                            IdPublicacion = 10,
                            IdServicio = 9
                        },
                        new
                        {
                            IdPublicacionServicio = 75,
                            IdPublicacion = 10,
                            IdServicio = 11
                        },
                        new
                        {
                            IdPublicacionServicio = 76,
                            IdPublicacion = 10,
                            IdServicio = 12
                        },
                        new
                        {
                            IdPublicacionServicio = 77,
                            IdPublicacion = 10,
                            IdServicio = 13
                        },
                        new
                        {
                            IdPublicacionServicio = 78,
                            IdPublicacion = 10,
                            IdServicio = 14
                        },
                        new
                        {
                            IdPublicacionServicio = 79,
                            IdPublicacion = 11,
                            IdServicio = 15
                        },
                        new
                        {
                            IdPublicacionServicio = 80,
                            IdPublicacion = 11,
                            IdServicio = 16
                        },
                        new
                        {
                            IdPublicacionServicio = 81,
                            IdPublicacion = 11,
                            IdServicio = 17
                        },
                        new
                        {
                            IdPublicacionServicio = 82,
                            IdPublicacion = 11,
                            IdServicio = 18
                        },
                        new
                        {
                            IdPublicacionServicio = 83,
                            IdPublicacion = 11,
                            IdServicio = 19
                        },
                        new
                        {
                            IdPublicacionServicio = 84,
                            IdPublicacion = 12,
                            IdServicio = 20
                        },
                        new
                        {
                            IdPublicacionServicio = 85,
                            IdPublicacion = 12,
                            IdServicio = 21
                        },
                        new
                        {
                            IdPublicacionServicio = 86,
                            IdPublicacion = 12,
                            IdServicio = 22
                        },
                        new
                        {
                            IdPublicacionServicio = 87,
                            IdPublicacion = 12,
                            IdServicio = 23
                        },
                        new
                        {
                            IdPublicacionServicio = 88,
                            IdPublicacion = 12,
                            IdServicio = 24
                        },
                        new
                        {
                            IdPublicacionServicio = 89,
                            IdPublicacion = 12,
                            IdServicio = 25
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Resena", b =>
                {
                    b.Property<int>("IdResena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdResena"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdReserva")
                        .HasColumnType("integer");

                    b.Property<int>("MeGusta")
                        .HasColumnType("integer");

                    b.Property<string>("Opinion")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("text");

                    b.HasKey("IdResena");

                    b.HasIndex("IdReserva");

                    b.ToTable("Resenas");

                    b.HasData(
                        new
                        {
                            IdResena = 1,
                            Calificacion = 4,
                            Fecha = new DateTime(2024, 11, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 1,
                            MeGusta = 3,
                            Opinion = "Muy tranquilo, privado y atención personalizada, muy atentos a nuestras necesidades y solicitudes, la llegada fácil a borde de la carretera lo cual es una ventaja para carros bajitos, la comida deliciosa y un personal atento, amable y respetuoso."
                        },
                        new
                        {
                            IdResena = 2,
                            Calificacion = 5,
                            Fecha = new DateTime(2024, 11, 7, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 4,
                            MeGusta = 8,
                            Opinion = "La estancia fue excelente, el lugar es hermoso y muy bien cuidado. La atención del personal fue impecable y siempre estuvieron disponibles para cualquier solicitud. La ubicación es perfecta para quienes buscan paz y tranquilidad."
                        },
                        new
                        {
                            IdResena = 3,
                            Calificacion = 3,
                            Fecha = new DateTime(2024, 11, 10, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 7,
                            MeGusta = 2,
                            Opinion = "El alojamiento es bastante bueno, aunque el servicio podría mejorar en términos de tiempo de respuesta. La limpieza estaba bien, pero la comida no cumplió completamente con nuestras expectativas."
                        },
                        new
                        {
                            IdResena = 4,
                            Calificacion = 4,
                            Fecha = new DateTime(2024, 11, 12, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 9,
                            MeGusta = 5,
                            Opinion = "Un lugar acogedor con un ambiente muy relajante. El personal es amable y la comida es deliciosa. Sin embargo, hubo algunos problemas con la conexión a internet durante nuestra estancia."
                        },
                        new
                        {
                            IdResena = 5,
                            Calificacion = 4,
                            Fecha = new DateTime(2024, 11, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 11,
                            MeGusta = 6,
                            Opinion = "La experiencia fue muy buena en general. Las instalaciones estaban limpias y bien mantenidas. El check-in fue rápido y sin problemas, pero el precio es un poco alto para lo que ofrecen."
                        },
                        new
                        {
                            IdResena = 6,
                            Calificacion = 5,
                            Fecha = new DateTime(2024, 11, 18, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 13,
                            MeGusta = 7,
                            Opinion = "El lugar es encantador y muy cómodo. La atención del personal fue muy buena y hicieron todo lo posible para que nuestra estancia fuera agradable. Recomendado para una escapada de fin de semana."
                        },
                        new
                        {
                            IdResena = 7,
                            Calificacion = 3,
                            Fecha = new DateTime(2024, 11, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReserva = 15,
                            MeGusta = 3,
                            Opinion = "Buena ubicación, pero la habitación necesitaba una mejor limpieza. La comida estaba bien, pero no había muchas opciones en el menú. El personal fue amable, aunque a veces parecía desorganizado."
                        });
                });

            modelBuilder.Entity("Dviaje.Models.ResenaMeGusta", b =>
                {
                    b.Property<int>("IdResenaMeGusta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdResenaMeGusta"));

                    b.Property<int>("IdResena")
                        .HasColumnType("integer");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdResenaMeGusta");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdResena", "IdUsuario")
                        .IsUnique();

                    b.ToTable("ResenasMeGusta");
                });

            modelBuilder.Entity("Dviaje.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReserva"));

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("integer");

                    b.Property<int>("ReservaEstado")
                        .HasColumnType("integer");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            IdReserva = 1,
                            FechaFinal = new DateTime(2024, 9, 24, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 9, 20, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 1,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            NumeroPersonas = 3,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 2,
                            FechaFinal = new DateTime(2024, 9, 30, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 9, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 1,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            NumeroPersonas = 2,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 3,
                            FechaFinal = new DateTime(2024, 10, 7, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 1,
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            NumeroPersonas = 4,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 4,
                            FechaFinal = new DateTime(2024, 10, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 1,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            NumeroPersonas = 5,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 5,
                            FechaFinal = new DateTime(2024, 10, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 12, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 2,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            NumeroPersonas = 2,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 6,
                            FechaFinal = new DateTime(2024, 10, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 2,
                            IdUsuario = "1c8e89f7-7db6-4cd5-907d-f01b058cd784",
                            NumeroPersonas = 4,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 7,
                            FechaFinal = new DateTime(2024, 10, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 18, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 2,
                            IdUsuario = "13825fa6-5c27-4303-ab17-6e13aac24c12",
                            NumeroPersonas = 3,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 8,
                            FechaFinal = new DateTime(2024, 10, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 2,
                            IdUsuario = "230d9aeb-6bca-4faa-b867-2d49e1a8c12e",
                            NumeroPersonas = 6,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 9,
                            FechaFinal = new DateTime(2024, 10, 28, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 22, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 3,
                            IdUsuario = "3a895383-b546-4693-8246-924a9fc5289f",
                            NumeroPersonas = 2,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 10,
                            FechaFinal = new DateTime(2024, 10, 30, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 3,
                            IdUsuario = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            NumeroPersonas = 5,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 11,
                            FechaFinal = new DateTime(2024, 11, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 28, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 4,
                            IdUsuario = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            NumeroPersonas = 4,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 12,
                            FechaFinal = new DateTime(2024, 11, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 10, 30, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 5,
                            IdUsuario = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            NumeroPersonas = 3,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 13,
                            FechaFinal = new DateTime(2024, 11, 8, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 11, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 6,
                            IdUsuario = "13825fa6-5c27-4303-ab17-6e13aac24c12",
                            NumeroPersonas = 2,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 14,
                            FechaFinal = new DateTime(2024, 11, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 11, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 6,
                            IdUsuario = "230d9aeb-6bca-4faa-b867-2d49e1a8c12e",
                            NumeroPersonas = 6,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 15,
                            FechaFinal = new DateTime(2024, 11, 15, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicial = new DateTime(2024, 11, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublicacion = 9,
                            IdUsuario = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            NumeroPersonas = 5,
                            ReservaEstado = 2
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Restriccion", b =>
                {
                    b.Property<int>("IdRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRestriccion"));

                    b.Property<string>("NombreRestriccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdRestriccion");

                    b.HasIndex("NombreRestriccion")
                        .IsUnique();

                    b.ToTable("Restricciones");

                    b.HasData(
                        new
                        {
                            IdRestriccion = 1,
                            NombreRestriccion = "Mascotas",
                            RutaIcono = "fa-solid fa-paw"
                        },
                        new
                        {
                            IdRestriccion = 2,
                            NombreRestriccion = "No Fumar",
                            RutaIcono = "fa-solid fa-ban-smoking"
                        },
                        new
                        {
                            IdRestriccion = 3,
                            NombreRestriccion = "Accesibilidad",
                            RutaIcono = "fa-solid fa-wheelchair"
                        },
                        new
                        {
                            IdRestriccion = 4,
                            NombreRestriccion = "Prohibido Ruido",
                            RutaIcono = "fa-solid fa-volume-xmark"
                        },
                        new
                        {
                            IdRestriccion = 5,
                            NombreRestriccion = "No Fiestas",
                            RutaIcono = "fa-solid fa-champagne-glasses"
                        },
                        new
                        {
                            IdRestriccion = 6,
                            NombreRestriccion = "No Niños",
                            RutaIcono = "fa-solid fa-children"
                        },
                        new
                        {
                            IdRestriccion = 7,
                            NombreRestriccion = "No Comida",
                            RutaIcono = "fa-solid fa-plate-wheat"
                        },
                        new
                        {
                            IdRestriccion = 8,
                            NombreRestriccion = "Horario Silencioso",
                            RutaIcono = "fa-solid fa-bell-slash"
                        },
                        new
                        {
                            IdRestriccion = 9,
                            NombreRestriccion = "Uso de Piscina",
                            RutaIcono = "fa-solid fa-water-ladder"
                        },
                        new
                        {
                            IdRestriccion = 10,
                            NombreRestriccion = "Zonas Comunes",
                            RutaIcono = "fa-solid fa-tree-city"
                        },
                        new
                        {
                            IdRestriccion = 11,
                            NombreRestriccion = "No Alcohol",
                            RutaIcono = "fa-solid fa-martini-glass-citrus"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ServicioTipo")
                        .HasColumnType("integer");

                    b.HasKey("IdServicio");

                    b.HasIndex("NombreServicio")
                        .IsUnique();

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            IdServicio = 1,
                            NombreServicio = "Piscina",
                            RutaIcono = "fa-solid fa-water-ladder",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 2,
                            NombreServicio = "Piscina techada",
                            RutaIcono = "fa-solid fa-water-ladder",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 3,
                            NombreServicio = "Parqueadero",
                            RutaIcono = "fa-solid fa-square-parking",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 4,
                            NombreServicio = "Restaurante",
                            RutaIcono = "fa-solid fa-utensils",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 5,
                            NombreServicio = "Bañera de hidromasaje",
                            RutaIcono = "fa-solid fa-bath",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 6,
                            NombreServicio = "Spa",
                            RutaIcono = "fa-solid fa-spa",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 7,
                            NombreServicio = "Gimnasio",
                            RutaIcono = "fa-solid fa-dumbbell",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 8,
                            NombreServicio = "Sauna",
                            RutaIcono = "fa-solid fa-hot-tub-person",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 9,
                            NombreServicio = "Sombrillas de playa",
                            RutaIcono = "fa-solid fa-umbrella-beach",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 10,
                            NombreServicio = "Desayuno incluido",
                            RutaIcono = "fa-solid fa-bacon",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 11,
                            NombreServicio = "Centro de negocios",
                            RutaIcono = "fa-solid fa-business-time",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 12,
                            NombreServicio = "Acepta mascotas",
                            RutaIcono = "fa-solid fa-paw",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 13,
                            NombreServicio = "Recepción disponible 24 horas",
                            RutaIcono = "fa-solid fa-bell-concierge",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 14,
                            NombreServicio = "Servicio de lavandería",
                            RutaIcono = "fa-solid fa-jug-detergent",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 15,
                            NombreServicio = "Salas de reuniones",
                            RutaIcono = "fa-solid fa-people-roof",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 16,
                            NombreServicio = "Cajero automático",
                            RutaIcono = "fa-solid fa-money-bills",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 17,
                            NombreServicio = "Piscina climatizada",
                            RutaIcono = "fa-solid fa-water-ladder",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 18,
                            NombreServicio = "Alquiler de bicicletas",
                            RutaIcono = "fa-solid fa-bicycle",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 19,
                            NombreServicio = "Sala de juegos",
                            RutaIcono = "fa-solid fa-table-tennis-paddle-ball",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 20,
                            NombreServicio = "Piscina al aire libre",
                            RutaIcono = "fa-solid fa-person-swimming",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 21,
                            NombreServicio = "Wi-Fi",
                            RutaIcono = "fa-solid fa-wifi",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 22,
                            NombreServicio = "Internet",
                            RutaIcono = "fa-solid fa-network-wired",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 23,
                            NombreServicio = "Aire acondicionado",
                            RutaIcono = "fa-solid fa-wind",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 24,
                            NombreServicio = "Cocina",
                            RutaIcono = "fa-solid fa-kitchen-set",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 25,
                            NombreServicio = "Balcón/Terraza",
                            RutaIcono = "fa-solid fa-house",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 26,
                            NombreServicio = "Bañera",
                            RutaIcono = "fa-solid fa-bath",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 27,
                            NombreServicio = "Minibar",
                            RutaIcono = "fa-solid fa-champagne-glasses",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 28,
                            NombreServicio = "Servicio de limpieza",
                            RutaIcono = "fa-solid fa-broom",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 29,
                            NombreServicio = "Secador de pelo",
                            RutaIcono = "fa-solid fa-wind",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 30,
                            NombreServicio = "Teléfono",
                            RutaIcono = "fa-solid fa-phone",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 31,
                            NombreServicio = "Balcón privado",
                            RutaIcono = "fa-solid fa-house",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 32,
                            NombreServicio = "Horno",
                            RutaIcono = "fa-solid fa-fire-burner",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 33,
                            NombreServicio = "Acceso silla de ruedas",
                            RutaIcono = "fa-solid fa-wheelchair",
                            ServicioTipo = 1
                        },
                        new
                        {
                            IdServicio = 34,
                            NombreServicio = "Hab. p/ personas con discapacidad",
                            RutaIcono = "fa-solid fa-house-user",
                            ServicioTipo = 1
                        },
                        new
                        {
                            IdServicio = 35,
                            NombreServicio = "Parqueadero p/ personas con discapacidad",
                            RutaIcono = "fa-solid fa-square-parking",
                            ServicioTipo = 1
                        });
                });

            modelBuilder.Entity("Dviaje.Models.ServicioAdicional", b =>
                {
                    b.Property<int>("IdServicioAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServicioAdicional"));

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdServicio")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecioServicioAdicional")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("IdServicioAdicional");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdServicio");

                    b.ToTable("ServiciosAdicionales");

                    b.HasData(
                        new
                        {
                            IdServicioAdicional = 1,
                            IdPublicacion = 1,
                            IdServicio = 1,
                            PrecioServicioAdicional = 50000m
                        },
                        new
                        {
                            IdServicioAdicional = 3,
                            IdPublicacion = 2,
                            IdServicio = 2,
                            PrecioServicioAdicional = 60000m
                        },
                        new
                        {
                            IdServicioAdicional = 4,
                            IdPublicacion = 3,
                            IdServicio = 3,
                            PrecioServicioAdicional = 70000m
                        },
                        new
                        {
                            IdServicioAdicional = 5,
                            IdPublicacion = 4,
                            IdServicio = 4,
                            PrecioServicioAdicional = 80000m
                        },
                        new
                        {
                            IdServicioAdicional = 6,
                            IdPublicacion = 5,
                            IdServicio = 5,
                            PrecioServicioAdicional = 90000m
                        },
                        new
                        {
                            IdServicioAdicional = 7,
                            IdPublicacion = 6,
                            IdServicio = 6,
                            PrecioServicioAdicional = 100000m
                        },
                        new
                        {
                            IdServicioAdicional = 8,
                            IdPublicacion = 7,
                            IdServicio = 7,
                            PrecioServicioAdicional = 110000m
                        },
                        new
                        {
                            IdServicioAdicional = 9,
                            IdPublicacion = 8,
                            IdServicio = 8,
                            PrecioServicioAdicional = 120000m
                        },
                        new
                        {
                            IdServicioAdicional = 10,
                            IdPublicacion = 9,
                            IdServicio = 9,
                            PrecioServicioAdicional = 130000m
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Verificado", b =>
                {
                    b.Property<int>("IdVerificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVerificado"));

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("timestamp");

                    b.Property<string>("IdAliado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VerificadoEstado")
                        .HasColumnType("integer");

                    b.HasKey("IdVerificado");

                    b.HasIndex("IdAliado");

                    b.ToTable("Verificados");

                    b.HasData(
                        new
                        {
                            IdVerificado = 1,
                            FechaRespuesta = new DateTime(2024, 7, 15, 10, 10, 54, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 8, 8, 20, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 2,
                            FechaRespuesta = new DateTime(2024, 7, 18, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 3,
                            FechaRespuesta = new DateTime(2024, 7, 20, 16, 25, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 12, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 4,
                            FechaRespuesta = new DateTime(2024, 7, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 5,
                            FechaRespuesta = new DateTime(2024, 7, 25, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 18, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "39e10980-4df3-494a-bbe7-410e105f6551",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 6,
                            FechaRespuesta = new DateTime(2024, 7, 27, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 20, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "c3733288-b354-445d-95da-4c655c3220b3",
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 7,
                            FechaRespuesta = new DateTime(2024, 7, 29, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 22, 13, 20, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 8,
                            FechaRespuesta = new DateTime(2024, 8, 1, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 9,
                            FechaRespuesta = new DateTime(2024, 8, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 28, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 10,
                            FechaRespuesta = new DateTime(2024, 8, 6, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            FechaSolicitud = new DateTime(2024, 7, 30, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 11,
                            FechaSolicitud = new DateTime(2024, 8, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            VerificadoEstado = 0
                        },
                        new
                        {
                            IdVerificado = 12,
                            FechaSolicitud = new DateTime(2024, 8, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAliado = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            VerificadoEstado = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1717add7-89b4-4bf7-990f-a9f10f18aa39",
                            Name = "Turista",
                            NormalizedName = "TURISTA"
                        },
                        new
                        {
                            Id = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894",
                            Name = "Aliado",
                            NormalizedName = "ALIADO"
                        },
                        new
                        {
                            Id = "4751f532-04d5-497f-b48d-b9e26bcffe6f",
                            Name = "Moderador",
                            NormalizedName = "MODERADOR"
                        },
                        new
                        {
                            Id = "e5cd3d4a-2687-49cd-b57c-c8eddfbf2e19",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "3a895383-b546-4693-8246-924a9fc5289f",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "1c8e89f7-7db6-4cd5-907d-f01b058cd784",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "13825fa6-5c27-4303-ab17-6e13aac24c12",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "230d9aeb-6bca-4faa-b867-2d49e1a8c12e",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "2e59aa62-61bd-4c8d-9a3d-13f461696eab",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "ca0a0328-0f5b-4ff3-b40e-6ffa8d145abb",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "39e10980-4df3-494a-bbe7-410e105f6551",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "c3733288-b354-445d-95da-4c655c3220b3",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            RoleId = "1717add7-89b4-4bf7-990f-a9f10f18aa39"
                        },
                        new
                        {
                            UserId = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "39e10980-4df3-494a-bbe7-410e105f6551",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "c3733288-b354-445d-95da-4c655c3220b3",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            RoleId = "651e4e93-f8a9-4c4e-9e85-9f0aea1d1894"
                        },
                        new
                        {
                            UserId = "51503d52-0841-49c0-a737-0e7a4c624f16",
                            RoleId = "4751f532-04d5-497f-b48d-b9e26bcffe6f"
                        },
                        new
                        {
                            UserId = "df48dcf8-198f-4c4a-878c-d50e6eb0cf7a",
                            RoleId = "4751f532-04d5-497f-b48d-b9e26bcffe6f"
                        },
                        new
                        {
                            UserId = "f4613409-a53e-446d-854d-db0f9d652864",
                            RoleId = "4751f532-04d5-497f-b48d-b9e26bcffe6f"
                        },
                        new
                        {
                            UserId = "ea4e325c-b58a-47e4-8c29-f69bb0d5b7e8",
                            RoleId = "4751f532-04d5-497f-b48d-b9e26bcffe6f"
                        },
                        new
                        {
                            UserId = "d88d60a8-a9c5-484a-9c1c-af2e5d3447a0",
                            RoleId = "4751f532-04d5-497f-b48d-b9e26bcffe6f"
                        },
                        new
                        {
                            UserId = "fd0953f0-b46b-4070-9958-4a841eba3af7",
                            RoleId = "4751f532-04d5-497f-b48d-b9e26bcffe6f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Dviaje.Models.Aliado", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("AliadoEstado")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("NumeroPublicaciones")
                        .HasColumnType("integer");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("SitioWeb")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("Verificado")
                        .HasColumnType("boolean");

                    b.HasIndex("Direccion")
                        .IsUnique();

                    b.HasIndex("RazonSocial")
                        .IsUnique();

                    b.ToTable("AspNetUsers", t =>
                        {
                            t.Property("Avatar")
                                .HasColumnName("Aliado_Avatar");
                        });

                    b.HasDiscriminator().HasValue("Aliado");

                    b.HasData(
                        new
                        {
                            Id = "01bfd429-16ea-44b3-902c-794e2c78dfa7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f9e343a6-2577-4978-a1b0-b072a529a3c8",
                            Email = "info@colombiaadventure.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@COLOMBIAADVENTURE.COM",
                            NormalizedUserName = "COLOMBIAADV",
                            PhoneNumber = "3216549870",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8c5b4d7e-af69-4130-ab51-014990bc358a",
                            TwoFactorEnabled = false,
                            UserName = "ColombiaAdv",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1609137144813-7d9921338f24?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Carrera 7 # 45-23",
                            NumeroPublicaciones = 4,
                            RazonSocial = "Colombia Adventure",
                            SitioWeb = "www.colombiaadventure.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "9cd842af-b711-44cc-aa5e-3863e3c30b76",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3049e617-b202-4acb-b8a2-3ea114e9d972",
                            Email = "contact@bogotatours.co",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTACT@BOGOTATOURS.CO",
                            NormalizedUserName = "BOGOTATOURS",
                            PhoneNumber = "3123456789",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "699b7459-626b-4ea8-8eda-cc12c21e109c",
                            TwoFactorEnabled = false,
                            UserName = "BogotaTours",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1678009859747-9f4620e0c355?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Avenida 6 # 12-34",
                            NumeroPublicaciones = 445,
                            RazonSocial = "Bogotá Tours",
                            SitioWeb = "www.bogotatours.co",
                            Verificado = true
                        },
                        new
                        {
                            Id = "c654adef-5f0c-48e6-946a-52706f8ac520",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "55e83fcf-2c2f-4153-b124-4b03b4ad9c7a",
                            Email = "hello@medellinexplore.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HELLO@MEDELLINEXPLORE.COM",
                            NormalizedUserName = "MEDELLINEXPLORE",
                            PhoneNumber = "3198765432",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f8684ed6-5f17-479b-bcbf-81f279937834",
                            TwoFactorEnabled = false,
                            UserName = "MedellinExplore",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1673213314908-5b1863e742d1?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Calle 80 # 25-67",
                            NumeroPublicaciones = 89,
                            RazonSocial = "Medellín Explore",
                            SitioWeb = "www.medellinexplore.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "8142c33b-ee02-4a13-b0c1-1e941387433d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "da581c7b-5ad8-446d-9f54-e5965d01fa3a",
                            Email = "support@cartagenagetaways.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPPORT@CARTAGENAGETAWAYS.COM",
                            NormalizedUserName = "CARTAGENAGETAWAYS",
                            PhoneNumber = "3176543210",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "52ca61b4-6f9e-4bf5-af2d-db30b4abcec6",
                            TwoFactorEnabled = false,
                            UserName = "CartagenaGetaways",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1691225409811-a64942a0596a?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Bocagrande, Avenida San Martín # 11-43",
                            NumeroPublicaciones = 478,
                            RazonSocial = "Cartagena Getaways",
                            SitioWeb = "www.cartagenagetaways.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "39e10980-4df3-494a-bbe7-410e105f6551",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8e6d2a8b-b4f0-4c5c-9f91-03578c89428d",
                            Email = "info@santamartaadventures.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@SANTAMARTAADVENTURES.COM",
                            NormalizedUserName = "SANTAMARTAADV",
                            PhoneNumber = "3154321098",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9e9a34f9-7a4d-44cd-a322-9382fe02e72c",
                            TwoFactorEnabled = false,
                            UserName = "SantaMartaAdv",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1543746746-46047c4f4bb0?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Centro Histórico, Carrera 2 # 10-55",
                            NumeroPublicaciones = 48,
                            RazonSocial = "Santa Marta Adventures",
                            SitioWeb = "www.santamartaadventures.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "c3733288-b354-445d-95da-4c655c3220b3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d63b695e-5dac-4d46-a90f-0f63b3e0453b",
                            Email = "contact@caliexperiences.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTACT@CALIEXPERIENCES.COM",
                            NormalizedUserName = "CALIEXP",
                            PhoneNumber = "3132109876",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3ce23e8b-5824-43d1-995e-52803ad9770f",
                            TwoFactorEnabled = false,
                            UserName = "CaliExp",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1523345863760-5b7f3472d14f?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Barrio San Antonio, Carrera 10 # 5-32",
                            NumeroPublicaciones = 8,
                            RazonSocial = "Cali Experiences",
                            SitioWeb = "www.caliexperiences.com",
                            Verificado = true
                        },
                        new
                        {
                            Id = "4c03648f-7727-4e5c-b096-fcbe3b9e3059",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5e3607b9-5b39-4827-b8c8-d8ddd6826090",
                            Email = "hello@barranquillaescapes.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HELLO@BARRANQUILLAESCAPES.COM",
                            NormalizedUserName = "BQUILLAESCAPES",
                            PhoneNumber = "3140987654",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "882877d3-4cc7-47f1-b0fc-11428f62b4ce",
                            TwoFactorEnabled = false,
                            UserName = "BquillaEscapes",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1492294112339-ea831887e5d7?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8dHVyaXNtfGVufDB8fDB8fHwy",
                            Direccion = "Vía 40 # 72-20",
                            NumeroPublicaciones = 7,
                            RazonSocial = "Barranquilla Escapes",
                            SitioWeb = "www.barranquillaescapes.com",
                            Verificado = false
                        },
                        new
                        {
                            Id = "6e291ab8-a9b5-4a7a-afbc-bbbd71b6291b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ffc360ab-38df-4500-80d8-68ee51e20e8a",
                            Email = "support@bucaramangajourneys.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPPORT@BUCARAMANGAJOURNEYS.COM",
                            NormalizedUserName = "BUCARAJOURNEYS",
                            PhoneNumber = "3229876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "561ac65c-094a-4ee2-8fbc-5de290cc30b6",
                            TwoFactorEnabled = false,
                            UserName = "BucaraJourneys",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1463839346397-8e9946845e6d?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fHR1cmlzbXxlbnwwfHwwfHx8Mg%3D%3D",
                            Direccion = "Cabecera, Carrera 33 # 45-67",
                            NumeroPublicaciones = 76,
                            RazonSocial = "Bucaramanga Journeys",
                            SitioWeb = "www.bucaramangajourneys.com",
                            Verificado = false
                        },
                        new
                        {
                            Id = "96067e6f-c29b-46ab-9ba1-18ec7b6534f4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b981b3c4-7cf4-49fa-9674-5f2ab900123e",
                            Email = "info@pereiratravels.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@PEREIRATRAVELS.COM",
                            NormalizedUserName = "PEREIRATRAVELS",
                            PhoneNumber = "3107654321",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9ae9e651-b3a2-4c07-bb95-953e1fbd95af",
                            TwoFactorEnabled = false,
                            UserName = "PereiraTravels",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1519998334409-c7c6b1147f65?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fHR1cmlzbXxlbnwwfHwwfHx8Mg%3D%3D",
                            Direccion = "Avenida Circunvalar # 18-10",
                            NumeroPublicaciones = 3,
                            RazonSocial = "Pereira Travels",
                            SitioWeb = "www.pereiratravels.com",
                            Verificado = false
                        },
                        new
                        {
                            Id = "5cf9f86f-36db-4d17-8ec3-cad66cd7f10f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d1323cc-5e0a-44d6-87df-f567a1b29987",
                            Email = "contact@manizaleswonders.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CONTACT@MANIZALESWONDERS.COM",
                            NormalizedUserName = "MANIZALESWONDERS",
                            PhoneNumber = "3165432109",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3fca92c6-05c0-43bd-bdaf-8ded28dba045",
                            TwoFactorEnabled = false,
                            UserName = "ManizalesWonders",
                            AliadoEstado = 0,
                            Avatar = "https://images.unsplash.com/photo-1532878056386-1e96eb5221ad?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTJ8fHR1cmlzbXxlbnwwfHwwfHx8Mg%3D%3D",
                            Direccion = "Centro, Carrera 23 # 17-18",
                            NumeroPublicaciones = 7,
                            RazonSocial = "Manizales Wonders",
                            SitioWeb = "www.manizaleswonders.com",
                            Verificado = false
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Usuario", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.HasData(
                        new
                        {
                            Id = "11bc73ce-dbe2-4370-bc92-0d57e5b366d7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fe5ee8d5-6abf-4f53-996d-9a28b8f750f6",
                            Email = "andres@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANDRES@GMAIL.COM",
                            NormalizedUserName = "ANDRES",
                            PhoneNumber = "3159725595",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ad17de56-2062-41e6-bb7a-3f2a01a4516c",
                            TwoFactorEnabled = false,
                            UserName = "Andres",
                            Avatar = "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "26cfe5c9-00f8-411e-b589-df3405a8b798",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29fd4643-ce3f-4984-9932-6cca55d43c8d",
                            Email = "maria@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MARIA@GMAIL.COM",
                            NormalizedUserName = "MARIA",
                            PhoneNumber = "3101234567",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "51e9836e-fd14-4b41-aafe-17031a29d5b5",
                            TwoFactorEnabled = false,
                            UserName = "Maria",
                            Avatar = "https://plus.unsplash.com/premium_photo-1658527049634-15142565537a?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "2c49ebc9-3bcd-4f22-a87e-186a1c0c55e1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3686b99-9c70-4123-879e-07b74df1cc67",
                            Email = "carlos@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CARLOS@YAHOO.COM",
                            NormalizedUserName = "CARLOS",
                            PhoneNumber = "3189876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d633bf62-4ddd-450b-8c50-e69e79b22cb1",
                            TwoFactorEnabled = false,
                            UserName = "Carlos",
                            Avatar = "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "e4309639-4588-4553-8c14-5ce4426e0dd7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6294d862-84cc-4eb4-a3de-ee6e349b1e8e",
                            Email = "sofia@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SOFIA@HOTMAIL.COM",
                            NormalizedUserName = "SOFIA",
                            PhoneNumber = "3123456789",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8f5d97f2-b1db-4ced-97ec-1577c335a700",
                            TwoFactorEnabled = false,
                            UserName = "Sofia",
                            Avatar = "https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "3a895383-b546-4693-8246-924a9fc5289f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef5c6c56-8836-45ce-b959-41c03a492540",
                            Email = "luis@outlook.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "LUIS@OUTLOOK.COM",
                            NormalizedUserName = "LUIS",
                            PhoneNumber = "3112345678",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e439a694-deab-4636-bd4c-e4e5af118fae",
                            TwoFactorEnabled = false,
                            UserName = "Luis",
                            Avatar = "https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "1c8e89f7-7db6-4cd5-907d-f01b058cd784",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f07fafa-6bef-4973-b5a2-1653728fd31e",
                            Email = "isabella@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ISABELLA@GMAIL.COM",
                            NormalizedUserName = "ISABELLA",
                            PhoneNumber = "3179876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b0dbac05-ea00-4385-9f44-5bf374ed8223",
                            TwoFactorEnabled = false,
                            UserName = "Isabella",
                            Avatar = "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "13825fa6-5c27-4303-ab17-6e13aac24c12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d55c1f93-5eba-4adf-a346-a3a2573e48a7",
                            Email = "fernando@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "FERNANDO@YAHOO.COM",
                            NormalizedUserName = "FERNANDO",
                            PhoneNumber = "3198765432",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3fada490-919d-427d-8691-426012260bf7",
                            TwoFactorEnabled = false,
                            UserName = "Fernando",
                            Avatar = "https://images.unsplash.com/photo-1543610892-0b1f7e6d8ac1?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "230d9aeb-6bca-4faa-b867-2d49e1a8c12e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7300c8f9-84fc-49e1-b238-dd4d4f440047",
                            Email = "ana@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANA@HOTMAIL.COM",
                            NormalizedUserName = "ANA",
                            PhoneNumber = "3149876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6e115365-65d4-4db4-ba15-07dc310845c5",
                            TwoFactorEnabled = false,
                            UserName = "Ana",
                            Avatar = "https://plus.unsplash.com/premium_photo-1670884441012-c5cf195c062a?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "2e59aa62-61bd-4c8d-9a3d-13f461696eab",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bc51b04-4e0d-44dd-a85d-de729a2a654b",
                            Email = "jorge@outlook.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JORGE@OUTLOOK.COM",
                            NormalizedUserName = "JORGE",
                            PhoneNumber = "3151234567",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c8a36ce3-d28c-47d0-a21d-c4fa5d079b7f",
                            TwoFactorEnabled = false,
                            UserName = "Jorge",
                            Avatar = "https://images.unsplash.com/photo-1623582854588-d60de57fa33f?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTJ8fGF2YXRhcnxlbnwwfHwwfHx8MA%3D%3D"
                        },
                        new
                        {
                            Id = "ca0a0328-0f5b-4ff3-b40e-6ffa8d145abb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "abebd15f-3e72-481b-9def-26430fc80ff5",
                            Email = "gabriela@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "GABRIELA@GMAIL.COM",
                            NormalizedUserName = "GABRIELA",
                            PhoneNumber = "3169876543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cbdca7c6-f036-453c-961c-7d6a8f75f5f3",
                            TwoFactorEnabled = false,
                            UserName = "Gabriela",
                            Avatar = "https://images.unsplash.com/photo-1706885093487-7eda37b48a60?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTl8fGF2YXRhcnxlbnwwfHwwfHx8MA%3D%3D"
                        },
                        new
                        {
                            Id = "51503d52-0841-49c0-a737-0e7a4c624f16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4fe5c8d6-dc92-460d-9d41-08ff14260472",
                            Email = "carlosModerador@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CARLOSMODERADOR@GMAIL.COM",
                            NormalizedUserName = "CARLOSMODERADOR",
                            PhoneNumber = "3159725596",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4c2e36ff-ee86-401a-9e54-a4f00878c786",
                            TwoFactorEnabled = false,
                            UserName = "CarlosModerador",
                            Avatar = "crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "df48dcf8-198f-4c4a-878c-d50e6eb0cf7a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eb254926-2f9f-4a94-9484-811e90e3bd73",
                            Email = "mariaModerador@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MARIAMODERADOR@GMAIL.COM",
                            NormalizedUserName = "MARIAMODERADOR",
                            PhoneNumber = "3159725597",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2846b401-f699-4adf-9652-2ed25a70a6dd",
                            TwoFactorEnabled = false,
                            UserName = "MariaModerador",
                            Avatar = "https://plus.unsplash.com/premium_photo-1658527049634-15142565537a?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "f4613409-a53e-446d-854d-db0f9d652864",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "255f34eb-71a7-4b78-93e7-5d76a684770f",
                            Email = "jorgeModerador@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JORGEMODERADOR@GMAIL.COM",
                            NormalizedUserName = "JORGEMODERADOR",
                            PhoneNumber = "3159725598",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3f15f612-7e40-4075-8434-3391b3021439",
                            TwoFactorEnabled = false,
                            UserName = "JorgeModerador",
                            Avatar = "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "ea4e325c-b58a-47e4-8c29-f69bb0d5b7e8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ed8d810b-d2bb-4a7d-a774-a7fbab6fce0c",
                            Email = "anaModerador@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANAMODERADOR@GMAIL.COM",
                            NormalizedUserName = "ANAMODERADOR",
                            PhoneNumber = "3159725599",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c63ed683-284b-496b-83be-39cd597574b8",
                            TwoFactorEnabled = false,
                            UserName = "AnaModerador",
                            Avatar = "https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "d88d60a8-a9c5-484a-9c1c-af2e5d3447a0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "618997ec-bfff-436a-b376-f85550fc70e1",
                            Email = "luisModerador@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "LUISMODERADOR@GMAIL.COM",
                            NormalizedUserName = "LUISMODERADOR",
                            PhoneNumber = "3159725600",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "bb01009a-e78b-4283-a715-50b3fed042a5",
                            TwoFactorEnabled = false,
                            UserName = "LuisModerador",
                            Avatar = "https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8YXZhdGFyfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            Id = "fd0953f0-b46b-4070-9958-4a841eba3af7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "446d6d34-3dc2-4d21-9590-07fbea56e704",
                            Email = "sofiaModerador@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SOFIAMODERADOR@GMAIL.COM",
                            NormalizedUserName = "SOFIAMODERADOR",
                            PhoneNumber = "3159725601",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f44bd72c-9396-4f43-9bf3-f6373ab225ca",
                            TwoFactorEnabled = false,
                            UserName = "SofiaModerador",
                            Avatar = "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8YXZhdGFyfGVufDB8fDB8fHww"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Adjunto", b =>
                {
                    b.HasOne("Dviaje.Models.Mensaje", "Mensaje")
                        .WithMany("Adjuntos")
                        .HasForeignKey("IdMensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mensaje");
                });

            modelBuilder.Entity("Dviaje.Models.Favorito", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.FechaNoDisponible", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.Mensaje", b =>
                {
                    b.HasOne("Dviaje.Models.AtencionViajero", "AtencionViajero")
                        .WithMany("Mensajes")
                        .HasForeignKey("IdAtencionViajero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("AtencionViajero");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.HasOne("Dviaje.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado");

                    b.Navigation("Aliado");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionCategoria", b =>
                {
                    b.HasOne("Dviaje.Models.Categoria", "Categoria")
                        .WithMany("PublicacionesCategorias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany("PublicacionCategorias")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionFavorita", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionImagen", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany("PublicacionImagenes")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionRestriccion", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany("PublicacionRestricciones")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Restriccion", "Restriccion")
                        .WithMany()
                        .HasForeignKey("IdRestriccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Restriccion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionServicio", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany("PublicacionServicios")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dviaje.Models.Resena", b =>
                {
                    b.HasOne("Dviaje.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("IdReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Dviaje.Models.ResenaMeGusta", b =>
                {
                    b.HasOne("Dviaje.Models.Resena", "Resena")
                        .WithMany()
                        .HasForeignKey("IdResena")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resena");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.Reserva", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.ServicioAdicional", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany("ServicioAdicionales")
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dviaje.Models.Verificado", b =>
                {
                    b.HasOne("Dviaje.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliado");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dviaje.Models.AtencionViajero", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("Dviaje.Models.Categoria", b =>
                {
                    b.Navigation("PublicacionesCategorias");
                });

            modelBuilder.Entity("Dviaje.Models.Mensaje", b =>
                {
                    b.Navigation("Adjuntos");
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.Navigation("PublicacionCategorias");

                    b.Navigation("PublicacionImagenes");

                    b.Navigation("PublicacionRestricciones");

                    b.Navigation("PublicacionServicios");

                    b.Navigation("ServicioAdicionales");
                });
#pragma warning restore 612, 618
        }
    }
}
