// <auto-generated />
using System;
using Dviaje.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dviaje.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240527024502_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dviaje.Models.Adjunto", b =>
                {
                    b.Property<int>("IdAdjunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdjunto"), 1L, 1);

                    b.Property<int>("IdAtencion")
                        .HasColumnType("int");

                    b.Property<string>("RutaAdjunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdjunto");

                    b.HasIndex("IdAtencion");

                    b.ToTable("Adjuntos");

                    b.HasData(
                        new
                        {
                            IdAdjunto = 1,
                            IdAtencion = 1,
                            RutaAdjunto = "PDF"
                        },
                        new
                        {
                            IdAdjunto = 2,
                            IdAtencion = 2,
                            RutaAdjunto = "Image"
                        },
                        new
                        {
                            IdAdjunto = 3,
                            IdAtencion = 3,
                            RutaAdjunto = "Document"
                        },
                        new
                        {
                            IdAdjunto = 4,
                            IdAtencion = 4,
                            RutaAdjunto = "Spreadsheet"
                        },
                        new
                        {
                            IdAdjunto = 5,
                            IdAtencion = 5,
                            RutaAdjunto = "Presentation"
                        },
                        new
                        {
                            IdAdjunto = 6,
                            IdAtencion = 6,
                            RutaAdjunto = "PDF"
                        },
                        new
                        {
                            IdAdjunto = 7,
                            IdAtencion = 7,
                            RutaAdjunto = "Image"
                        },
                        new
                        {
                            IdAdjunto = 8,
                            IdAtencion = 8,
                            RutaAdjunto = "Document"
                        },
                        new
                        {
                            IdAdjunto = 9,
                            IdAtencion = 9,
                            RutaAdjunto = "Spreadsheet"
                        },
                        new
                        {
                            IdAdjunto = 10,
                            IdAtencion = 10,
                            RutaAdjunto = "Presentation"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Aliado", b =>
                {
                    b.Property<int>("IdAliado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAliado"), 1L, 1);

                    b.Property<int>("AliadoEstado")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("text");

                    b.Property<string>("SitioWeb")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("text");

                    b.Property<bool>("Verificado")
                        .HasColumnType("bit");

                    b.HasKey("IdAliado");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Aliados");

                    b.HasData(
                        new
                        {
                            IdAliado = 1,
                            AliadoEstado = 1,
                            Direccion = "calle me lo calana",
                            IdUsuario = 1,
                            RazonSocial = "quiero plata",
                            SitioWeb = "www.abueno.com",
                            Telefono = "3333332222",
                            Verificado = true
                        },
                        new
                        {
                            IdAliado = 2,
                            AliadoEstado = 1,
                            Direccion = "Avenida Siempre Viva 123",
                            IdUsuario = 2,
                            RazonSocial = "Finanzas Seguras",
                            SitioWeb = "www.finseguras.com",
                            Telefono = "3111111111",
                            Verificado = true
                        },
                        new
                        {
                            IdAliado = 3,
                            AliadoEstado = 0,
                            Direccion = "Calle Luna 456",
                            IdUsuario = 3,
                            RazonSocial = "Crédito Fácil",
                            SitioWeb = "www.creditofacil.com",
                            Telefono = "3222222222",
                            Verificado = false
                        },
                        new
                        {
                            IdAliado = 4,
                            AliadoEstado = 1,
                            Direccion = "Calle Sol 789",
                            IdUsuario = 4,
                            RazonSocial = "Préstamos Ya",
                            SitioWeb = "www.prestamosya.com",
                            Telefono = "3333333333",
                            Verificado = true
                        },
                        new
                        {
                            IdAliado = 5,
                            AliadoEstado = 0,
                            Direccion = "Avenida del Parque 101",
                            IdUsuario = 5,
                            RazonSocial = "Dinero Rápido",
                            SitioWeb = "www.dinerorapido.com",
                            Telefono = "3444444444",
                            Verificado = false
                        },
                        new
                        {
                            IdAliado = 6,
                            AliadoEstado = 1,
                            Direccion = "Calle del Río 202",
                            IdUsuario = 6,
                            RazonSocial = "Crédito Seguro",
                            SitioWeb = "www.creditoseguro.com",
                            Telefono = "3555555555",
                            Verificado = true
                        },
                        new
                        {
                            IdAliado = 7,
                            AliadoEstado = 0,
                            Direccion = "Boulevard del Mar 303",
                            IdUsuario = 7,
                            RazonSocial = "Préstamo Fácil",
                            SitioWeb = "www.prestamofacil.com",
                            Telefono = "3666666666",
                            Verificado = false
                        },
                        new
                        {
                            IdAliado = 8,
                            AliadoEstado = 1,
                            Direccion = "Calle del Sol 404",
                            IdUsuario = 8,
                            RazonSocial = "Dinero Seguro",
                            SitioWeb = "www.dineroseguro.com",
                            Telefono = "3777777777",
                            Verificado = true
                        },
                        new
                        {
                            IdAliado = 9,
                            AliadoEstado = 0,
                            Direccion = "Avenida de las Flores 505",
                            IdUsuario = 9,
                            RazonSocial = "Préstamos Rápidos",
                            SitioWeb = "www.prestamosrapidos.com",
                            Telefono = "3888888888",
                            Verificado = false
                        },
                        new
                        {
                            IdAliado = 10,
                            AliadoEstado = 1,
                            Direccion = "Calle del Bosque 606",
                            IdUsuario = 10,
                            RazonSocial = "Créditos al Instante",
                            SitioWeb = "www.creditosinstante.com",
                            Telefono = "3999999999",
                            Verificado = true
                        });
                });

            modelBuilder.Entity("Dviaje.Models.AtencionViajero", b =>
                {
                    b.Property<int>("IdAtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtencion"), 1L, 1);

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text");

                    b.Property<int>("AtencionViajeroPrioridad")
                        .HasColumnType("int");

                    b.Property<int>("AtencionViajeroTipoPqrs")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaAtencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("text");

                    b.HasKey("IdAtencion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AtencionViajeros");

                    b.HasData(
                        new
                        {
                            IdAtencion = 1,
                            Asunto = "No funciona la pagina",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "No sivre",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 1,
                            Respuesta = "A bueno"
                        },
                        new
                        {
                            IdAtencion = 2,
                            Asunto = "No puedo hacer una reserva",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 1,
                            Descripcion = "Problema con la reserva",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 2,
                            Respuesta = "Resuelto"
                        },
                        new
                        {
                            IdAtencion = 3,
                            Asunto = "¿Cuál es mi itinerario?",
                            AtencionViajeroPrioridad = 1,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "Consulta sobre el itinerario",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 3,
                            Respuesta = "Información enviada"
                        },
                        new
                        {
                            IdAtencion = 4,
                            Asunto = "Podrían mejorar el servicio",
                            AtencionViajeroPrioridad = 1,
                            AtencionViajeroTipoPqrs = 3,
                            Descripcion = "Sugerencia para mejorar",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 4,
                            Respuesta = "Gracias por la sugerencia"
                        },
                        new
                        {
                            IdAtencion = 5,
                            Asunto = "Perdí mi equipaje",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 2,
                            Descripcion = "Incidente con el equipaje",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 5,
                            Respuesta = "Lo sentimos mucho"
                        },
                        new
                        {
                            IdAtencion = 6,
                            Asunto = "¿Qué comida se ofrece a bordo?",
                            AtencionViajeroPrioridad = 1,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "Consulta sobre el servicio de comida",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 6,
                            Respuesta = "Información proporcionada"
                        },
                        new
                        {
                            IdAtencion = 7,
                            Asunto = "No puedo hacer el check-in online",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 1,
                            Descripcion = "Problema con el check-in",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 7,
                            Respuesta = "Solucionado"
                        },
                        new
                        {
                            IdAtencion = 8,
                            Asunto = "Más opciones de entretenimiento a bordo",
                            AtencionViajeroPrioridad = 2,
                            AtencionViajeroTipoPqrs = 3,
                            Descripcion = "Sugerencia sobre el entretenimiento",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 8,
                            Respuesta = "Apreciamos su feedback"
                        },
                        new
                        {
                            IdAtencion = 9,
                            Asunto = "¿Cuáles son las tarifas para el próximo mes?",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 0,
                            Descripcion = "Consulta sobre tarifas",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 9,
                            Respuesta = "Información enviada"
                        },
                        new
                        {
                            IdAtencion = 10,
                            Asunto = "Mi vuelo fue cancelado sin previo aviso",
                            AtencionViajeroPrioridad = 0,
                            AtencionViajeroTipoPqrs = 2,
                            Descripcion = "Reclamo por vuelo cancelado",
                            FechaAtencion = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaRespuesta = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdUsuario = 10,
                            Respuesta = "Estamos investigando"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            NombreCategoria = "Finca",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 2,
                            NombreCategoria = "Apartamento",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 3,
                            NombreCategoria = "Casa",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 4,
                            NombreCategoria = "Hotel",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 5,
                            NombreCategoria = "Hostal",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 6,
                            NombreCategoria = "Cabaña",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 7,
                            NombreCategoria = "Villa",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 8,
                            NombreCategoria = "Resort",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 9,
                            NombreCategoria = "Piso compartido",
                            RutaIcono = "Ruta"
                        },
                        new
                        {
                            IdCategoria = 10,
                            NombreCategoria = "Finca",
                            RutaIcono = "Ruta"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Favorito", b =>
                {
                    b.Property<int>("IdFavorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFavorito"), 1L, 1);

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdFavorito");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Favoritos");

                    b.HasData(
                        new
                        {
                            IdFavorito = 1,
                            IdPublicacion = 1,
                            IdUsuario = 1
                        },
                        new
                        {
                            IdFavorito = 2,
                            IdPublicacion = 2,
                            IdUsuario = 2
                        },
                        new
                        {
                            IdFavorito = 3,
                            IdPublicacion = 3,
                            IdUsuario = 3
                        },
                        new
                        {
                            IdFavorito = 4,
                            IdPublicacion = 4,
                            IdUsuario = 4
                        },
                        new
                        {
                            IdFavorito = 5,
                            IdPublicacion = 5,
                            IdUsuario = 5
                        },
                        new
                        {
                            IdFavorito = 6,
                            IdPublicacion = 6,
                            IdUsuario = 6
                        },
                        new
                        {
                            IdFavorito = 7,
                            IdPublicacion = 7,
                            IdUsuario = 7
                        },
                        new
                        {
                            IdFavorito = 8,
                            IdPublicacion = 8,
                            IdUsuario = 8
                        },
                        new
                        {
                            IdFavorito = 9,
                            IdPublicacion = 9,
                            IdUsuario = 9
                        },
                        new
                        {
                            IdFavorito = 10,
                            IdPublicacion = 10,
                            IdUsuario = 10
                        });
                });

            modelBuilder.Entity("Dviaje.Models.FechaNoDisponible", b =>
                {
                    b.Property<int>("IdFechaNoDisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFechaNoDisponible"), 1L, 1);

                    b.Property<DateTime>("FechaSinDisponible")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.HasKey("IdFechaNoDisponible");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("FechasNoDisponibles");

                    b.HasData(
                        new
                        {
                            IdFechaNoDisponible = 1,
                            FechaSinDisponible = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3321),
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdFechaNoDisponible = 2,
                            FechaSinDisponible = new DateTime(2024, 5, 27, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3335),
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdFechaNoDisponible = 3,
                            FechaSinDisponible = new DateTime(2024, 5, 28, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3345),
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdFechaNoDisponible = 4,
                            FechaSinDisponible = new DateTime(2024, 5, 29, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3355),
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdFechaNoDisponible = 5,
                            FechaSinDisponible = new DateTime(2024, 5, 30, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3365),
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdFechaNoDisponible = 6,
                            FechaSinDisponible = new DateTime(2024, 5, 31, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3379),
                            IdPublicacion = 6
                        },
                        new
                        {
                            IdFechaNoDisponible = 7,
                            FechaSinDisponible = new DateTime(2024, 6, 1, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3389),
                            IdPublicacion = 7
                        },
                        new
                        {
                            IdFechaNoDisponible = 8,
                            FechaSinDisponible = new DateTime(2024, 6, 2, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3399),
                            IdPublicacion = 8
                        },
                        new
                        {
                            IdFechaNoDisponible = 9,
                            FechaSinDisponible = new DateTime(2024, 6, 3, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3409),
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdFechaNoDisponible = 10,
                            FechaSinDisponible = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(3418),
                            IdPublicacion = 1
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.Property<int>("IdPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublicacion"), 1L, 1);

                    b.Property<int>("CapacidadCamas")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAliado")
                        .HasColumnType("int");

                    b.Property<int>("NumeroResenas")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text");

                    b.HasKey("IdPublicacion");

                    b.HasIndex("IdAliado");

                    b.ToTable("Publicaciones");

                    b.HasData(
                        new
                        {
                            IdPublicacion = 1,
                            CapacidadCamas = 5,
                            Descripcion = "una ona de relax",
                            Direccion = "calle diomedez",
                            Fecha = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2431),
                            IdAliado = 5,
                            NumeroResenas = 5,
                            Precio = 5000.0,
                            Puntuacion = 5,
                            Titulo = "hola colombia"
                        },
                        new
                        {
                            IdPublicacion = 2,
                            CapacidadCamas = 3,
                            Descripcion = "Un lugar lleno de cultura",
                            Direccion = "Avenida Reforma",
                            Fecha = new DateTime(2024, 5, 25, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2441),
                            IdAliado = 6,
                            NumeroResenas = 10,
                            Precio = 7000.0,
                            Puntuacion = 4,
                            Titulo = "Descubre México"
                        },
                        new
                        {
                            IdPublicacion = 3,
                            CapacidadCamas = 4,
                            Descripcion = "Explora la magia de los Andes",
                            Direccion = "Calle de las Flores",
                            Fecha = new DateTime(2024, 5, 24, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2455),
                            IdAliado = 7,
                            NumeroResenas = 8,
                            Precio = 8000.0,
                            Puntuacion = 5,
                            Titulo = "Aventura en Perú"
                        },
                        new
                        {
                            IdPublicacion = 4,
                            CapacidadCamas = 6,
                            Descripcion = "Disfruta del sol y la playa",
                            Direccion = "Playa Copacabana",
                            Fecha = new DateTime(2024, 5, 23, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2465),
                            IdAliado = 8,
                            NumeroResenas = 12,
                            Precio = 9000.0,
                            Puntuacion = 4,
                            Titulo = "Paraíso en Brasil"
                        },
                        new
                        {
                            IdPublicacion = 5,
                            CapacidadCamas = 5,
                            Descripcion = "Descansa en la Patagonia",
                            Direccion = "Calle San Martín",
                            Fecha = new DateTime(2024, 5, 22, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2480),
                            IdAliado = 9,
                            NumeroResenas = 15,
                            Precio = 10000.0,
                            Puntuacion = 5,
                            Titulo = "Relax en Argentina"
                        },
                        new
                        {
                            IdPublicacion = 6,
                            CapacidadCamas = 3,
                            Descripcion = "Explora el desierto de Atacama",
                            Direccion = "Avenida del Mar",
                            Fecha = new DateTime(2024, 5, 21, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2490),
                            IdAliado = 10,
                            NumeroResenas = 6,
                            Precio = 6000.0,
                            Puntuacion = 4,
                            Titulo = "Encanto en Chile"
                        },
                        new
                        {
                            IdPublicacion = 7,
                            CapacidadCamas = 4,
                            Descripcion = "Descubre el Salar de Uyuni",
                            Direccion = "Calle Uyuni",
                            Fecha = new DateTime(2024, 5, 20, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2499),
                            IdAliado = 2,
                            NumeroResenas = 7,
                            Precio = 7500.0,
                            Puntuacion = 3,
                            Titulo = "Aventura en Bolivia"
                        },
                        new
                        {
                            IdPublicacion = 8,
                            CapacidadCamas = 5,
                            Descripcion = "Visita Punta del Este",
                            Direccion = "Avenida Gorlero",
                            Fecha = new DateTime(2024, 5, 19, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2514),
                            IdAliado = 1,
                            NumeroResenas = 9,
                            Precio = 8500.0,
                            Puntuacion = 5,
                            Titulo = "Diversión en Uruguay"
                        },
                        new
                        {
                            IdPublicacion = 9,
                            CapacidadCamas = 2,
                            Descripcion = "Relájate en Asunción",
                            Direccion = "Calle Palma",
                            Fecha = new DateTime(2024, 5, 18, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2524),
                            IdAliado = 3,
                            NumeroResenas = 5,
                            Precio = 5500.0,
                            Puntuacion = 4,
                            Titulo = "Tranquilidad en Paraguay"
                        },
                        new
                        {
                            IdPublicacion = 10,
                            CapacidadCamas = 6,
                            Descripcion = "Explora las Islas Galápagos",
                            Direccion = "Avenida Amazonas",
                            Fecha = new DateTime(2024, 5, 17, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2538),
                            IdAliado = 4,
                            NumeroResenas = 14,
                            Precio = 9500.0,
                            Puntuacion = 5,
                            Titulo = "Maravillas de Ecuador"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionCategoria", b =>
                {
                    b.Property<int>("IdPublicacionCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublicacionCategoria"), 1L, 1);

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacionCategoria");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesCategorias");

                    b.HasData(
                        new
                        {
                            IdPublicacionCategoria = 1,
                            IdCategoria = 1,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionCategoria = 2,
                            IdCategoria = 2,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionCategoria = 3,
                            IdCategoria = 3,
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdPublicacionCategoria = 4,
                            IdCategoria = 4,
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdPublicacionCategoria = 5,
                            IdCategoria = 5,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionCategoria = 6,
                            IdCategoria = 6,
                            IdPublicacion = 6
                        },
                        new
                        {
                            IdPublicacionCategoria = 7,
                            IdCategoria = 7,
                            IdPublicacion = 7
                        },
                        new
                        {
                            IdPublicacionCategoria = 8,
                            IdCategoria = 8,
                            IdPublicacion = 8
                        },
                        new
                        {
                            IdPublicacionCategoria = 9,
                            IdCategoria = 9,
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdPublicacionCategoria = 10,
                            IdCategoria = 1,
                            IdPublicacion = 1
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionFavorita", b =>
                {
                    b.Property<int>("IdPublicacionFavorita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublicacionFavorita"), 1L, 1);

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacionFavorita");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesFavoritas");

                    b.HasData(
                        new
                        {
                            IdPublicacionFavorita = 1,
                            IdPublicacion = 1
                        },
                        new
                        {
                            IdPublicacionFavorita = 2,
                            IdPublicacion = 2
                        },
                        new
                        {
                            IdPublicacionFavorita = 3,
                            IdPublicacion = 3
                        },
                        new
                        {
                            IdPublicacionFavorita = 4,
                            IdPublicacion = 4
                        },
                        new
                        {
                            IdPublicacionFavorita = 5,
                            IdPublicacion = 5
                        },
                        new
                        {
                            IdPublicacionFavorita = 6,
                            IdPublicacion = 6
                        },
                        new
                        {
                            IdPublicacionFavorita = 7,
                            IdPublicacion = 7
                        },
                        new
                        {
                            IdPublicacionFavorita = 8,
                            IdPublicacion = 8
                        },
                        new
                        {
                            IdPublicacionFavorita = 9,
                            IdPublicacion = 9
                        },
                        new
                        {
                            IdPublicacionFavorita = 10,
                            IdPublicacion = 10
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionImagen", b =>
                {
                    b.Property<int>("IdPublicacionImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublicacionImagen"), 1L, 1);

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPublicacionImagen");

                    b.HasIndex("IdPublicacion");

                    b.ToTable("PublicacionesImagenes");

                    b.HasData(
                        new
                        {
                            IdPublicacionImagen = 1,
                            IdPublicacion = 1,
                            Ruta = "img/nose/playboy"
                        },
                        new
                        {
                            IdPublicacionImagen = 2,
                            IdPublicacion = 2,
                            Ruta = "img/nose/beachview"
                        },
                        new
                        {
                            IdPublicacionImagen = 3,
                            IdPublicacion = 3,
                            Ruta = "img/nose/mountainview"
                        },
                        new
                        {
                            IdPublicacionImagen = 4,
                            IdPublicacion = 4,
                            Ruta = "img/nose/cityscape"
                        },
                        new
                        {
                            IdPublicacionImagen = 5,
                            IdPublicacion = 5,
                            Ruta = "img/nose/luxuryroom"
                        },
                        new
                        {
                            IdPublicacionImagen = 6,
                            IdPublicacion = 6,
                            Ruta = "img/nose/poolview"
                        },
                        new
                        {
                            IdPublicacionImagen = 7,
                            IdPublicacion = 7,
                            Ruta = "img/nose/gardenview"
                        },
                        new
                        {
                            IdPublicacionImagen = 8,
                            IdPublicacion = 8,
                            Ruta = "img/nose/rooftopview"
                        },
                        new
                        {
                            IdPublicacionImagen = 9,
                            IdPublicacion = 9,
                            Ruta = "img/nose/spa"
                        },
                        new
                        {
                            IdPublicacionImagen = 10,
                            IdPublicacion = 10,
                            Ruta = "img/nose/historicalsite"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionRestriccion", b =>
                {
                    b.Property<int>("IdPublicacionRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublicacionRestriccion"), 1L, 1);

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdRestriccion")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacionRestriccion");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdRestriccion");

                    b.ToTable("PublicacionesRestricciones");

                    b.HasData(
                        new
                        {
                            IdPublicacionRestriccion = 1,
                            IdPublicacion = 1,
                            IdRestriccion = 1
                        },
                        new
                        {
                            IdPublicacionRestriccion = 2,
                            IdPublicacion = 2,
                            IdRestriccion = 2
                        },
                        new
                        {
                            IdPublicacionRestriccion = 3,
                            IdPublicacion = 3,
                            IdRestriccion = 3
                        },
                        new
                        {
                            IdPublicacionRestriccion = 4,
                            IdPublicacion = 4,
                            IdRestriccion = 4
                        },
                        new
                        {
                            IdPublicacionRestriccion = 5,
                            IdPublicacion = 5,
                            IdRestriccion = 5
                        },
                        new
                        {
                            IdPublicacionRestriccion = 6,
                            IdPublicacion = 6,
                            IdRestriccion = 6
                        },
                        new
                        {
                            IdPublicacionRestriccion = 7,
                            IdPublicacion = 7,
                            IdRestriccion = 7
                        },
                        new
                        {
                            IdPublicacionRestriccion = 8,
                            IdPublicacion = 8,
                            IdRestriccion = 8
                        },
                        new
                        {
                            IdPublicacionRestriccion = 9,
                            IdPublicacion = 9,
                            IdRestriccion = 9
                        },
                        new
                        {
                            IdPublicacionRestriccion = 10,
                            IdPublicacion = 10,
                            IdRestriccion = 10
                        });
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionServicio", b =>
                {
                    b.Property<int>("IdPublicacionServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublicacionServicio"), 1L, 1);

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacionServicio");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdServicio");

                    b.ToTable("PublicacionesServicios");

                    b.HasData(
                        new
                        {
                            IdPublicacionServicio = 1,
                            IdPublicacion = 1,
                            IdServicio = 1
                        },
                        new
                        {
                            IdPublicacionServicio = 2,
                            IdPublicacion = 2,
                            IdServicio = 2
                        },
                        new
                        {
                            IdPublicacionServicio = 3,
                            IdPublicacion = 3,
                            IdServicio = 3
                        },
                        new
                        {
                            IdPublicacionServicio = 4,
                            IdPublicacion = 4,
                            IdServicio = 4
                        },
                        new
                        {
                            IdPublicacionServicio = 5,
                            IdPublicacion = 5,
                            IdServicio = 5
                        },
                        new
                        {
                            IdPublicacionServicio = 6,
                            IdPublicacion = 6,
                            IdServicio = 6
                        },
                        new
                        {
                            IdPublicacionServicio = 7,
                            IdPublicacion = 7,
                            IdServicio = 7
                        },
                        new
                        {
                            IdPublicacionServicio = 8,
                            IdPublicacion = 8,
                            IdServicio = 8
                        },
                        new
                        {
                            IdPublicacionServicio = 9,
                            IdPublicacion = 9,
                            IdServicio = 9
                        },
                        new
                        {
                            IdPublicacionServicio = 10,
                            IdPublicacion = 10,
                            IdServicio = 10
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Resena", b =>
                {
                    b.Property<int>("IdResena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResena"), 1L, 1);

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdReserva")
                        .HasColumnType("int");

                    b.Property<int>("MeGusta")
                        .HasColumnType("int");

                    b.Property<string>("Opinion")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("text");

                    b.HasKey("IdResena");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdReserva");

                    b.ToTable("Resenas");

                    b.HasData(
                        new
                        {
                            IdResena = 1,
                            Calificacion = 2,
                            Fecha = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 4,
                            IdReserva = 5,
                            MeGusta = 3,
                            Opinion = "que ondaaa"
                        },
                        new
                        {
                            IdResena = 2,
                            Calificacion = 5,
                            Fecha = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 2,
                            IdReserva = 3,
                            MeGusta = 10,
                            Opinion = "Excelente servicio y atención."
                        },
                        new
                        {
                            IdResena = 3,
                            Calificacion = 4,
                            Fecha = new DateTime(2024, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 5,
                            IdReserva = 1,
                            MeGusta = 7,
                            Opinion = "La comida estaba deliciosa."
                        },
                        new
                        {
                            IdResena = 4,
                            Calificacion = 5,
                            Fecha = new DateTime(2024, 5, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 3,
                            IdReserva = 2,
                            MeGusta = 15,
                            Opinion = "El lugar es muy acogedor."
                        },
                        new
                        {
                            IdResena = 5,
                            Calificacion = 3,
                            Fecha = new DateTime(2024, 5, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 1,
                            IdReserva = 4,
                            MeGusta = 4,
                            Opinion = "El servicio podría mejorar."
                        },
                        new
                        {
                            IdResena = 6,
                            Calificacion = 3,
                            Fecha = new DateTime(2024, 5, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 6,
                            IdReserva = 5,
                            MeGusta = 2,
                            Opinion = "El precio es un poco alto."
                        },
                        new
                        {
                            IdResena = 7,
                            Calificacion = 5,
                            Fecha = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 4,
                            IdReserva = 7,
                            MeGusta = 20,
                            Opinion = "Recomiendo totalmente este lugar."
                        },
                        new
                        {
                            IdResena = 8,
                            Calificacion = 2,
                            Fecha = new DateTime(2024, 5, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 7,
                            IdReserva = 6,
                            MeGusta = 1,
                            Opinion = "No me gustó la atención recibida."
                        },
                        new
                        {
                            IdResena = 9,
                            Calificacion = 4,
                            Fecha = new DateTime(2024, 5, 18, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 8,
                            IdReserva = 8,
                            MeGusta = 8,
                            Opinion = "El ambiente es muy agradable."
                        },
                        new
                        {
                            IdResena = 10,
                            Calificacion = 5,
                            Fecha = new DateTime(2024, 5, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            IdPublicacion = 9,
                            IdReserva = 9,
                            MeGusta = 12,
                            Opinion = "Volvería sin dudarlo."
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"), 1L, 1);

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("int");

                    b.Property<int>("ReservaEstado")
                        .HasColumnType("int");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            IdReserva = 1,
                            FechaFinal = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2641),
                            FechaInicial = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2631),
                            IdPublicacion = 1,
                            IdUsuario = 4,
                            NumeroPersonas = 1,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 2,
                            FechaFinal = new DateTime(2024, 5, 28, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2666),
                            FechaInicial = new DateTime(2024, 5, 27, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2656),
                            IdPublicacion = 2,
                            IdUsuario = 5,
                            NumeroPersonas = 2,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 3,
                            FechaFinal = new DateTime(2024, 5, 30, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2705),
                            FechaInicial = new DateTime(2024, 5, 29, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2675),
                            IdPublicacion = 3,
                            IdUsuario = 6,
                            NumeroPersonas = 3,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 4,
                            FechaFinal = new DateTime(2024, 6, 1, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2724),
                            FechaInicial = new DateTime(2024, 5, 31, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2714),
                            IdPublicacion = 4,
                            IdUsuario = 7,
                            NumeroPersonas = 4,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 5,
                            FechaFinal = new DateTime(2024, 6, 3, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2749),
                            FechaInicial = new DateTime(2024, 6, 2, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2739),
                            IdPublicacion = 5,
                            IdUsuario = 8,
                            NumeroPersonas = 2,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 6,
                            FechaFinal = new DateTime(2024, 6, 5, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2817),
                            FechaInicial = new DateTime(2024, 6, 4, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2807),
                            IdPublicacion = 6,
                            IdUsuario = 9,
                            NumeroPersonas = 1,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 7,
                            FechaFinal = new DateTime(2024, 6, 7, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2842),
                            FechaInicial = new DateTime(2024, 6, 6, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2827),
                            IdPublicacion = 7,
                            IdUsuario = 10,
                            NumeroPersonas = 3,
                            ReservaEstado = 2
                        },
                        new
                        {
                            IdReserva = 8,
                            FechaFinal = new DateTime(2024, 6, 9, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2861),
                            FechaInicial = new DateTime(2024, 6, 8, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2851),
                            IdPublicacion = 8,
                            IdUsuario = 1,
                            NumeroPersonas = 4,
                            ReservaEstado = 0
                        },
                        new
                        {
                            IdReserva = 9,
                            FechaFinal = new DateTime(2024, 6, 11, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2881),
                            FechaInicial = new DateTime(2024, 6, 10, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2871),
                            IdPublicacion = 9,
                            IdUsuario = 2,
                            NumeroPersonas = 2,
                            ReservaEstado = 1
                        },
                        new
                        {
                            IdReserva = 10,
                            FechaFinal = new DateTime(2024, 6, 13, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2905),
                            FechaInicial = new DateTime(2024, 6, 12, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2890),
                            IdPublicacion = 10,
                            IdUsuario = 3,
                            NumeroPersonas = 1,
                            ReservaEstado = 2
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Restriccion", b =>
                {
                    b.Property<int>("IdRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRestriccion"), 1L, 1);

                    b.Property<string>("NombreRestriccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRestriccion");

                    b.ToTable("Restricciones");

                    b.HasData(
                        new
                        {
                            IdRestriccion = 1,
                            NombreRestriccion = "Prohibido mascotas",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 2,
                            NombreRestriccion = "Prohibido mascotas",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 3,
                            NombreRestriccion = "No fumar",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 4,
                            NombreRestriccion = "No se permiten fiestas o eventos",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 5,
                            NombreRestriccion = "Hora de silencio después de las 10 PM",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 6,
                            NombreRestriccion = "No se permite el acceso a personas no registradas",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 7,
                            NombreRestriccion = "Máximo 2 personas por habitación",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 8,
                            NombreRestriccion = "Uso obligatorio de mascarilla en áreas comunes",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 9,
                            NombreRestriccion = "No se permiten visitantes después de las 8 PM",
                            RutaIcono = "random"
                        },
                        new
                        {
                            IdRestriccion = 10,
                            NombreRestriccion = "Lavarse las manos antes de entrar a la piscina",
                            RutaIcono = "random"
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"), 1L, 1);

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RutaIcono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioTipo")
                        .HasColumnType("int");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            IdServicio = 1,
                            NombreServicio = "Cama",
                            RutaIcono = "",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 2,
                            NombreServicio = "Gimnasio",
                            RutaIcono = "random",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 3,
                            NombreServicio = "Spa",
                            RutaIcono = "random",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 4,
                            NombreServicio = "Restaurante",
                            RutaIcono = "random",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 5,
                            NombreServicio = "Sala de juegos",
                            RutaIcono = "random",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 6,
                            NombreServicio = "Cine",
                            RutaIcono = "random",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 7,
                            NombreServicio = "Cancha de tenis",
                            RutaIcono = "random",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 8,
                            NombreServicio = "Cancha de baloncesto",
                            RutaIcono = "random",
                            ServicioTipo = 2
                        },
                        new
                        {
                            IdServicio = 9,
                            NombreServicio = "Sauna",
                            RutaIcono = "random",
                            ServicioTipo = 0
                        },
                        new
                        {
                            IdServicio = 10,
                            NombreServicio = "Bar",
                            RutaIcono = "random",
                            ServicioTipo = 0
                        });
                });

            modelBuilder.Entity("Dviaje.Models.ServicioAdicional", b =>
                {
                    b.Property<int>("IdServicioAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicioAdicional"), 1L, 1);

                    b.Property<int>("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<double>("PrecioServicioAdicional")
                        .HasColumnType("float");

                    b.HasKey("IdServicioAdicional");

                    b.HasIndex("IdPublicacion");

                    b.HasIndex("IdServicio");

                    b.ToTable("ServiciosAdicionales");

                    b.HasData(
                        new
                        {
                            IdServicioAdicional = 1,
                            IdPublicacion = 1,
                            IdServicio = 1,
                            PrecioServicioAdicional = 50000.0
                        },
                        new
                        {
                            IdServicioAdicional = 2,
                            IdPublicacion = 1,
                            IdServicio = 1,
                            PrecioServicioAdicional = 50000.0
                        },
                        new
                        {
                            IdServicioAdicional = 3,
                            IdPublicacion = 2,
                            IdServicio = 2,
                            PrecioServicioAdicional = 60000.0
                        },
                        new
                        {
                            IdServicioAdicional = 4,
                            IdPublicacion = 3,
                            IdServicio = 3,
                            PrecioServicioAdicional = 70000.0
                        },
                        new
                        {
                            IdServicioAdicional = 5,
                            IdPublicacion = 4,
                            IdServicio = 4,
                            PrecioServicioAdicional = 80000.0
                        },
                        new
                        {
                            IdServicioAdicional = 6,
                            IdPublicacion = 5,
                            IdServicio = 5,
                            PrecioServicioAdicional = 90000.0
                        },
                        new
                        {
                            IdServicioAdicional = 7,
                            IdPublicacion = 6,
                            IdServicio = 6,
                            PrecioServicioAdicional = 100000.0
                        },
                        new
                        {
                            IdServicioAdicional = 8,
                            IdPublicacion = 7,
                            IdServicio = 7,
                            PrecioServicioAdicional = 110000.0
                        },
                        new
                        {
                            IdServicioAdicional = 9,
                            IdPublicacion = 8,
                            IdServicio = 8,
                            PrecioServicioAdicional = 120000.0
                        },
                        new
                        {
                            IdServicioAdicional = 10,
                            IdPublicacion = 9,
                            IdServicio = 9,
                            PrecioServicioAdicional = 130000.0
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1
                        },
                        new
                        {
                            IdUsuario = 2
                        },
                        new
                        {
                            IdUsuario = 3
                        },
                        new
                        {
                            IdUsuario = 4
                        },
                        new
                        {
                            IdUsuario = 5
                        },
                        new
                        {
                            IdUsuario = 6
                        },
                        new
                        {
                            IdUsuario = 7
                        },
                        new
                        {
                            IdUsuario = 8
                        },
                        new
                        {
                            IdUsuario = 9
                        },
                        new
                        {
                            IdUsuario = 10
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Verificado", b =>
                {
                    b.Property<int>("IdVerificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVerificado"), 1L, 1);

                    b.Property<DateTime>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAliado")
                        .HasColumnType("int");

                    b.Property<int>("VerificadoEstado")
                        .HasColumnType("int");

                    b.HasKey("IdVerificado");

                    b.HasIndex("IdAliado");

                    b.ToTable("Verificados");

                    b.HasData(
                        new
                        {
                            IdVerificado = 1,
                            FechaRespuesta = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2142),
                            FechaSolicitud = new DateTime(2024, 5, 26, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2133),
                            IdAliado = 1,
                            VerificadoEstado = 0
                        },
                        new
                        {
                            IdVerificado = 2,
                            FechaRespuesta = new DateTime(2024, 5, 27, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2172),
                            FechaSolicitud = new DateTime(2024, 5, 25, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2152),
                            IdAliado = 2,
                            VerificadoEstado = 0
                        },
                        new
                        {
                            IdVerificado = 3,
                            FechaRespuesta = new DateTime(2024, 5, 28, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2196),
                            FechaSolicitud = new DateTime(2024, 5, 24, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2182),
                            IdAliado = 3,
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 4,
                            FechaRespuesta = new DateTime(2024, 5, 29, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2226),
                            FechaSolicitud = new DateTime(2024, 5, 23, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2216),
                            IdAliado = 4,
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 5,
                            FechaRespuesta = new DateTime(2024, 5, 30, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2255),
                            FechaSolicitud = new DateTime(2024, 5, 22, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2235),
                            IdAliado = 5,
                            VerificadoEstado = 0
                        },
                        new
                        {
                            IdVerificado = 6,
                            FechaRespuesta = new DateTime(2024, 5, 31, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2289),
                            FechaSolicitud = new DateTime(2024, 5, 21, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2279),
                            IdAliado = 6,
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 7,
                            FechaRespuesta = new DateTime(2024, 6, 1, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2309),
                            FechaSolicitud = new DateTime(2024, 5, 20, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2299),
                            IdAliado = 7,
                            VerificadoEstado = 2
                        },
                        new
                        {
                            IdVerificado = 8,
                            FechaRespuesta = new DateTime(2024, 6, 2, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2328),
                            FechaSolicitud = new DateTime(2024, 5, 19, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2318),
                            IdAliado = 8,
                            VerificadoEstado = 0
                        },
                        new
                        {
                            IdVerificado = 9,
                            FechaRespuesta = new DateTime(2024, 6, 3, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2353),
                            FechaSolicitud = new DateTime(2024, 5, 18, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2343),
                            IdAliado = 9,
                            VerificadoEstado = 1
                        },
                        new
                        {
                            IdVerificado = 10,
                            FechaRespuesta = new DateTime(2024, 6, 4, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2372),
                            FechaSolicitud = new DateTime(2024, 5, 17, 21, 45, 1, 476, DateTimeKind.Local).AddTicks(2362),
                            IdAliado = 10,
                            VerificadoEstado = 2
                        });
                });

            modelBuilder.Entity("Dviaje.Models.Adjunto", b =>
                {
                    b.HasOne("Dviaje.Models.AtencionViajero", "AtencionViajero")
                        .WithMany()
                        .HasForeignKey("IdAtencion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtencionViajero");
                });

            modelBuilder.Entity("Dviaje.Models.Aliado", b =>
                {
                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.AtencionViajero", b =>
                {
                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.Favorito", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.FechaNoDisponible", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.Publicacion", b =>
                {
                    b.HasOne("Dviaje.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliado");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionCategoria", b =>
                {
                    b.HasOne("Dviaje.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionFavorita", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionImagen", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionRestriccion", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Restriccion", "Restriccion")
                        .WithMany()
                        .HasForeignKey("IdRestriccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Restriccion");
                });

            modelBuilder.Entity("Dviaje.Models.PublicacionServicio", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dviaje.Models.Resena", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("IdReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Dviaje.Models.Reserva", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dviaje.Models.ServicioAdicional", b =>
                {
                    b.HasOne("Dviaje.Models.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("IdPublicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dviaje.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dviaje.Models.Verificado", b =>
                {
                    b.HasOne("Dviaje.Models.Aliado", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliado");
                });
#pragma warning restore 612, 618
        }
    }
}
